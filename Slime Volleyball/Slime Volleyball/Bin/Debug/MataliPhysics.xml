<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MataliPhysics</name>
    </assembly>
    <members>
        <member name="T:Komires.MataliPhysics.PhysicsSceneFactory">
            <summary>
            The PhysicsSceneFactory object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreateShapePrimitivesFromConcave(System.String,Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean,System.Boolean)">
            <summary>
            Creates the convex primitive shapes from the concave triangle mesh.
            Returns the number of created convex primitive shapes.
            </summary>
            <param name="baseName">Initial name for everyone created convex primitive shape.</param>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreateShapePrimitivesFromConcave(System.String,Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Creates the convex primitive shapes from the concave triangle mesh.
            Returns the number of created convex primitive shapes.
            </summary>
            <param name="baseName">Initial name for everyone created convex primitive shape.</param>
            <param name="triangleMesh">TriangleMesh to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreateShapePrimitivesFromConcave(System.String,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[])">
            <summary>
            Creates the convex primitive shapes from the concave triangle mesh.
            Returns the number of created convex primitive shapes.
            </summary>
            <param name="baseName">Initial name for everyone created convex primitive shape.</param>
            <param name="meshVertices">Triangle array containing the VertexPositionNormalTexture elements to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreateShapesFromConcave(System.String,Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean,System.Boolean)">
            <summary>
            Creates the shapes from the concave triangle mesh.
            Creates appropriate convex primitive shapes.
            Returns the number of created shapes.
            </summary>
            <param name="baseName">Initial name for everyone created shape.</param>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreateShapesFromConcave(System.String,Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Creates the shapes from the concave triangle mesh.
            Creates appropriate convex primitive shapes.
            Returns the number of created shapes.
            </summary>
            <param name="baseName">Initial name for everyone created shape.</param>
            <param name="triangleMesh">TriangleMesh to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreateShapesFromConcave(System.String,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[])">
            <summary>
            Creates the shapes from the concave triangle mesh.
            Creates appropriate convex primitive shapes.
            Returns the number of created shapes.
            </summary>
            <param name="baseName">Initial name for everyone created shape.</param>
            <param name="meshVertices">Triangle array containing the VertexPositionNormalTexture elements to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreatePhysicsObjectsFromConcave(System.String,Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean,System.Boolean)">
            <summary>
            Creates the physics objects from the concave triangle mesh.
            Creates appropriate shapes and convex primitive shapes.
            Returns the number of created physics objects.
            </summary>
            <param name="baseName">Initial name for everyone created physics object.</param>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreatePhysicsObjectsFromConcave(System.String,Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Creates the physics objects from the concave triangle mesh.
            Creates appropriate shapes and convex primitive shapes.
            Returns the number of created physics objects.
            </summary>
            <param name="baseName">Initial name for everyone created physics object.</param>
            <param name="triangleMesh">TriangleMesh to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneFactory.CreatePhysicsObjectsFromConcave(System.String,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[])">
            <summary>
            Creates the physics objects from the concave triangle mesh.
            Creates appropriate shapes and convex primitive shapes.
            Returns the number of created physics objects.
            </summary>
            <param name="baseName">Initial name for everyone created physics object.</param>
            <param name="meshVertices">Triangle array containing the VertexPositionNormalTexture elements to read.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.TriangleMeshManager">
            <summary>
            Gets the TriangleMeshManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.ShapePrimitiveManager">
            <summary>
            Gets the ShapePrimitiveManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.ShapeManager">
            <summary>
            Gets the ShapeManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.PhysicsObjectManager">
            <summary>
            Gets the PhysicsObjectManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.ConstraintManager">
            <summary>
            Gets the ConstraintManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneFactory.IsEnveloped">
            <summary>
            Returns whether the PhysicsSceneFactory object is enveloped. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsMaterial">
            <summary>
            The PhysicsMaterial object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetAmbient(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetAmbient(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetAmbient(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetAmbient(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetDiffuse(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetDiffuse(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetDiffuse(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetDiffuse(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetEmission(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="emission">The emissive color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetEmission(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="emission">The emissive color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetEmission(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="emission">The emissive color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetEmission(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetSpecular(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetSpecular(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetSpecular(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetSpecular(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetAmbient(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetAmbient(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetAmbient(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetAmbient(System.Single,System.Single,System.Single)">
            <summary>
            Sets the ambient color of the material. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetDiffuse(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetDiffuse(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetDiffuse(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetDiffuse(System.Single,System.Single,System.Single)">
            <summary>
            Sets the diffuse color of the material. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetEmission(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="emission">The emissive color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetEmission(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="emission">The emissive color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetEmission(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="emission">The emissive color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetEmission(System.Single,System.Single,System.Single)">
            <summary>
            Sets the emissive color of the material. Default to Red = x = 0.2, Green = y = 0.2, Blue = z = 0.2, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.GetSpecular(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetSpecular(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetSpecular(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the material.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsMaterial.SetSpecular(System.Single,System.Single,System.Single)">
            <summary>
            Sets the specular color of the material. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.IsEnveloped">
            <summary>
            Returns whether the PhysicsMaterial object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.RigidGroup">
            <summary>
            Gets or sets the flag of the rigid group of the material.
            The flag equal the true indicates the physics object building rigid group. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.SpecularPower">
            <summary>
            Gets or sets the specular power of the material. Default to 10.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.TransparencyFactor">
            <summary>
            Gets or sets the transparency factor of the material. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.TransparencyStepFactor">
            <summary>
            Gets or sets the step with which transparency factor will be changed during simulation. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.TransparencyRigidGroupSorting">
            <summary>
            Gets or sets the sorting flag of the rigid group for active transparency factor. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.TransparencySecondPass">
            <summary>
            Gets or sets the flag of second pass required to draw transparent physics objects. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.TwoSidedNormals">
            <summary>
            Gets or sets the flag of two-sided normal vectors for material. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.MinBreakRigidGroupVelocity">
            <summary>
            Gets or sets the minimum velocity of breaking a rigid group that includes the current physics object. Default to 100.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.MinBreakRigidGroupVelocityMultiplier">
            <summary>
            Gets or sets the multiplier of minimum velocity of breaking a rigid group that collides with the current physics object. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.Restitution">
            <summary>
            Gets or sets restitution of the material from the range 0 - 10. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.StaticFriction">
            <summary>
            Gets or sets static friction of the material from the range 0 - 1. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.DynamicFriction">
            <summary>
            Gets or sets dynamic friction of the material from the range 0 - 1. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsMaterial.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsLightType">
            <summary>
            Lights types.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsLightType.Directional">
            <summary>
            Directional.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsLightType.Point">
            <summary>
            Point.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsLightType.Spot">
            <summary>
            Spot.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsLight">
            <summary>
            The PhysicsLight object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetAmbient(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetAmbient(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetAmbient(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetAmbient(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetDiffuse(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDiffuse(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDiffuse(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDiffuse(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetSpecular(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetSpecular(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetSpecular(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetSpecular(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetAmbient(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetAmbient(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetAmbient(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="ambient">The ambient color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetAmbient(System.Single,System.Single,System.Single)">
            <summary>
            Sets the ambient color of the light. Default to Red = x = 0.4, Green = y = 0.4, Blue = z = 0.4, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetDiffuse(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDiffuse(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDiffuse(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="diffuse">The diffuse color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDiffuse(System.Single,System.Single,System.Single)">
            <summary>
            Sets the diffuse color of the light. Default to Red = x = 0.7, Green = y = 0.7, Blue = z = 0.7, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetSpecular(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetSpecular(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetSpecular(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="specular">The specular color of the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetSpecular(System.Single,System.Single,System.Single)">
            <summary>
            Sets the specular color of the light. Default to Red = x = 1, Green = y = 1, Blue = z = 1, Alpha = w = 1.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetPosition(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the light position. 
            </summary>
            <param name="position">The light position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetPosition(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the light position. 
            </summary>
            <param name="position">The light position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetPosition(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the light position. 
            </summary>
            <param name="position">The light position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetPosition(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the light position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetDirection(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Gets the light direction. 
            </summary>
            <param name="direction">The light direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDirection(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Sets the light direction. 
            </summary>
            <param name="direction">The light direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDirection(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the light direction. 
            </summary>
            <param name="direction">The light direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDirection(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the light direction. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the light position. 
            </summary>
            <param name="position">The light position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the light position. 
            </summary>
            <param name="position">The light position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetPosition(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the light position. 
            </summary>
            <param name="position">The light position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Sets the light position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.GetDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the light direction. 
            </summary>
            <param name="direction">The light direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the light direction. 
            </summary>
            <param name="direction">The light direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDirection(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the light direction. 
            </summary>
            <param name="direction">The light direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsLight.SetDirection(System.Single,System.Single,System.Single)">
            <summary>
            Sets the light direction. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.IsEnveloped">
            <summary>
            Returns whether the PhysicsLight object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Enabled">
            <summary>
            Enables or disables the light.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.EnableAddToCameraDrawTransparentPhysicsObjects">
            <summary>
            Enables or disables adding the physics object with light to the visible or transparent physics objects with the active EnableDrawing flag for the camera. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Type">
            <summary>
            Gets or sets the type of light. Default to Directional. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Range">
            <summary>
            Gets or sets the range of light. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Intensity">
            <summary>
            Gets or sets the intensity of light. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Attenuation">
            <summary>
            Gets or sets the attenuation of light. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Attenuation1">
            <summary>
            Gets or sets the attenuation of light. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.Attenuation2">
            <summary>
            Gets or sets the attenuation of light. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.SpotInnerRadAngle">
            <summary>
            Gets or sets the inner angle of spotlight in radians. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.SpotOuterRadAngle">
            <summary>
            Gets or sets the outer angle of spotlight in radians. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.SpotCutoffRadAngle">
            <summary>
            Gets or sets the cutoff angle (SpotOuterAngle - SpotInnerAngle) of spotlight in radians. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.SpotExponent">
            <summary>
            Gets or sets the exponent of spotlight. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsLight.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ConstraintManager">
            <summary>
            The ConstraintManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Get(System.Int32)">
            <summary>
            Gets the constraint with the specified index. 
            </summary>
            <param name="index">Index of the constraint in the ConstraintManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Create(System.String)">
            <summary>
            Creates the constraint with the specified name. 
            Name must be unique in the ConstraintManager.
            </summary>
            <param name="name">Name of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Contains(System.String)">
            <summary>
            Determines whether the constraint is in the ConstraintManager. 
            </summary>
            <param name="name">Name of the constraint to locate in the ConstraintManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Contains(Komires.MataliPhysics.Constraint)">
            <summary>
            Determines whether the constraint is in the ConstraintManager. 
            </summary>
            <param name="constraint">Constraint to locate in the ConstraintManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Find(System.String)">
            <summary>
            Searches for the constraint in the ConstraintManager. 
            </summary>
            <param name="name">Name of the constraint to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Find(System.Int32)">
            <summary>
            Searches for the constraint in the ConstraintManager. 
            </summary>
            <param name="index">Index of the constraint to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Remove(System.String)">
            <summary>
            Removes the constraint from the ConstraintManager. 
            </summary>
            <param name="name">Name of the constraint to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Remove(System.Int32)">
            <summary>
            Removes the constraint from the ConstraintManager. 
            </summary>
            <param name="index">Index of the constraint to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.Remove(Komires.MataliPhysics.Constraint)">
            <summary>
            Removes the constraint from the ConstraintManager. 
            </summary>
            <param name="constraint">Constraint to remove from the ConstraintManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ConstraintManager.RemoveAll">
            <summary>
            Removes all constraints from the ConstraintManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ConstraintManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ConstraintManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ConstraintManager.IsEnveloped">
            <summary>
            Returns whether the ConstraintManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ConstraintManager.Count">
            <summary>
            Gets the number of constraints managed by the ConstraintManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.View">
            <summary>
            The View object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.View.GetViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.GetTransposeViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the transpose view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.SetViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.SetTransposeViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the transpose view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.GetLookAtLH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns the view matrix in left-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="rotation">Rotation of the observer.</param>
            <param name="distance">Distance of the observer.</param>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.GetLookAtLH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns the view matrix in left-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="targetPosition">Target position of the observer.</param>
            <param name="upper">Upper vector of the observer.</param>
            <param name="distance">Distance of the observer.</param>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.GetLookAtRH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns the view matrix in right-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="rotation">Rotation of the observer.</param>
            <param name="distance">Distance of the observer.</param>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.GetLookAtRH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns the view matrix in right-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="targetPosition">Target position of the observer.</param>
            <param name="upper">Upper vector of the observer.</param>
            <param name="distance">Distance of the observer.</param>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.CreateLookAtLH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,System.Single)">
            <summary>
            Creates the view matrix in left-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="rotation">Rotation of the observer.</param>
            <param name="distance">Distance of the observer.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.CreateLookAtLH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single)">
            <summary>
            Creates the view matrix in left-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="targetPosition">Target position of the observer.</param>
            <param name="upper">Upper vector of the observer.</param>
            <param name="distance">Distance of the observer.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.CreateLookAtRH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,System.Single)">
            <summary>
            Creates the view matrix in right-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="rotation">Rotation of the observer.</param>
            <param name="distance">Distance of the observer.</param>
        </member>
        <member name="M:Komires.MataliPhysics.View.CreateLookAtRH(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single)">
            <summary>
            Creates the view matrix in right-handed coordinate system conventions. 
            </summary>
            <param name="position">Position of the observer.</param>
            <param name="targetPosition">Target position of the observer.</param>
            <param name="upper">Upper vector of the observer.</param>
            <param name="distance">Distance of the observer.</param>
        </member>
        <member name="P:Komires.MataliPhysics.View.IsEnveloped">
            <summary>
            Returns whether the View object is enveloped. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Triangle">
            <summary>
            The Triangle object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.CalculateNormal">
            <summary>
            Calculates the normal vector of triangle. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.GetTexture1(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets the texture's coordinates of first triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of first triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture1(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Sets the texture's coordinates of first triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of first triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture1(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the texture's coordinates of first triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of first triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture1(System.Single,System.Single)">
            <summary>
            Sets the texture's coordinates of first triangle vertex. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.GetTexture2(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets the texture's coordinates of second triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of second triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture2(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Sets the texture's coordinates of second triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of second triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture2(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the texture's coordinates of second triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of second triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture2(System.Single,System.Single)">
            <summary>
            Sets the texture's coordinates of second triangle vertex. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.GetTexture3(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets the texture's coordinates of third triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of third triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture3(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Sets the texture's coordinates of third triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of third triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture3(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the texture's coordinates of third triangle vertex. 
            </summary>
            <param name="texture">The texture's coordinates of third triangle vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.SetTexture3(System.Single,System.Single)">
            <summary>
            Sets the texture's coordinates of third triangle vertex. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Triangle.GetNormal(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the normal vector of triangle. 
            </summary>
            <param name="normal">The normal vector of triangle.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.TriangleMeshRegion">
            <summary>
            Gets the TriangleMeshRegion object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.IsEnveloped">
            <summary>
            Returns whether the Triangle object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Name">
            <summary>
            Gets or sets name of the triangle.
            Name must be unique in the TriangleManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Index">
            <summary>
            Gets the index of triangle in the TriangleManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Vertex1">
            <summary>
            Gets or sets the first triangle vertex. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Vertex2">
            <summary>
            Gets or sets the second triangle vertex. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Vertex3">
            <summary>
            Gets or sets the third triangle vertex. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Index1">
            <summary>
            Gets or sets the index of first triangle vertex. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Index2">
            <summary>
            Gets or sets the index of second triangle vertex. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Triangle.Index3">
            <summary>
            Gets or sets the index of third triangle vertex. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsObjectManager">
            <summary>
            The PhysicsObjectManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Get(System.Int32)">
            <summary>
            Gets the physics object with the specified index. 
            </summary>
            <param name="index">Index of the physics object in the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Create(System.String)">
            <summary>
            Creates the physics object with the specified name. 
            Name must be unique in the PhysicsObjectManager.
            </summary>
            <param name="name">Name of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Contains(System.String)">
            <summary>
            Determines whether the physics object is in the PhysicsObjectManager. 
            </summary>
            <param name="name">Name of the physics object to locate in the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Contains(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Determines whether the physics object is in the PhysicsObjectManager. 
            </summary>
            <param name="physicsObject">Physics object to locate in the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Find(System.String)">
            <summary>
            Searches for the physics object in the PhysicsObjectManager. 
            </summary>
            <param name="name">Name of the physics object to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Find(System.Int32)">
            <summary>
            Searches for the physics object in the PhysicsObjectManager. 
            </summary>
            <param name="index">Index of the physics object to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Remove(System.String)">
            <summary>
            Removes the physics object from the PhysicsObjectManager. 
            </summary>
            <param name="name">Name of the physics object to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Remove(System.Int32)">
            <summary>
            Removes the physics object from the PhysicsObjectManager. 
            </summary>
            <param name="index">Index of the physics object to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.Remove(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Removes the physics object from the PhysicsObjectManager. 
            </summary>
            <param name="physicsObject">Physics object to remove from the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObjectManager.RemoveAll">
            <summary>
            Removes all physics objects from the PhysicsObjectManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObjectManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObjectManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObjectManager.IsEnveloped">
            <summary>
            Returns whether the PhysicsObjectManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObjectManager.Count">
            <summary>
            Gets the number of physics objects managed by the PhysicsObjectManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.DestructionController">
            <summary>
            The DestructionController object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DestructionController.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DestructionController.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DestructionController.IsEnveloped">
            <summary>
            Returns whether the DestructionController object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DestructionController.Enabled">
            <summary>
            Enables or disables the DestructionController. Default to true. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleMeshType">
            <summary>
            Types of the triangle meshes. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.TriangleMeshType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.TriangleMeshType.Convex">
            <summary>
            Convex.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.TriangleMeshType.Concave">
            <summary>
            Concave.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleMesh">
            <summary>
            The TriangleMesh object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetCenterTranslation(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the translation of geometrical center of the triangle mesh. Describes how far the geometrical center of the triangle mesh was moved. Usually 0.
            </summary>
            <param name="centerTranslation">The translation of geometrical center of the triangle mesh.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetVertexCount">
            <summary>
            Gets the number of vertices. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetTriangleCount">
            <summary>
            Gets the number of triangles. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.MoveToCenter">
            <summary>
            Moves the triangle mesh to his geometrical center and sets the CenterTranslation vector.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.Move(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Moves the triangle mesh by specified vector.
            </summary>
            <param name="translation">Translation vector.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.Move(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Moves the triangle mesh by specified vector.
            </summary>
            <param name="translation">Translation vector.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.Move(System.Single,System.Single,System.Single)">
            <summary>
            Moves the triangle mesh by specified vector.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.Transform(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Transforms the triangle mesh by specified matrix.
            </summary>
            <param name="transform">Transform matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.Transform(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms the triangle mesh by specified matrix.
            </summary>
            <param name="transform">Transform matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateFromModel(Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates the triangle mesh from the model.
            </summary>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="flipNormals">Flag of reversing the direction of normal vectors of triangles.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateBox(System.Single)">
            <summary>
            Creates the cuboid.
            </summary>
            <param name="halfEdge">Half of the edge lenght of the cube from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateBox(System.Single,System.Single,System.Single)">
            <summary>
            Creates the cuboid.
            </summary>
            <param name="halfWidth">Half of the width of the cuboid from the range 0.01 - 100000.</param>
            <param name="halfHeight">Half of the heigth of the cuboid from the range 0.01 - 100000.</param>
            <param name="halfLength">Half of the length of the cuboid from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateSphere(System.Int32,System.Int32,System.Single)">
            <summary>
            Creates the sphere.
            </summary>
            <param name="stacks">Number of stacks from the range 2 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateHemisphereX(System.Int32,System.Int32,System.Single)">
            <summary>
            Creates the hemisphere whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateHemisphereY(System.Int32,System.Int32,System.Single)">
            <summary>
            Creates the hemisphere whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateHemisphereZ(System.Int32,System.Int32,System.Single)">
            <summary>
            Creates the hemisphere whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCylinderX(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the cylinder whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCylinderY(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the cylinder whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCylinderZ(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the cylinder whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCylinder2RX(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates the cylinder with two radii whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius1">First radius from the range 0.01 - 100000.</param>
            <param name="radius2">Second radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCylinder2RY(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates the cylinder with two radii whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius1">First radius from the range 0.01 - 100000.</param>
            <param name="radius2">Second radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCylinder2RZ(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates the cylinder with two radii whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius1">First radius from the range 0.01 - 100000.</param>
            <param name="radius2">Second radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateConeX(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the cone whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateConeY(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the cone whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateConeZ(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the cone whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCapsuleX(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the capsule whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 2 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCapsuleY(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the capsule whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 2 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateCapsuleZ(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the capsule whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 2 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="radius">Radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTorusX(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the torus whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 3 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="outerRadius">Outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius">Inner radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTorusY(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the torus whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 3 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="outerRadius">Outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius">Inner radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTorusZ(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates the torus whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 3 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="outerRadius">Outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius">Inner radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTubeX(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the tube whose central axis is aligned with the X axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="outerRadius1">First outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius1">First inner radius from the range 0.01 - 100000.</param>
            <param name="outerRadius2">Second outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius2">Second inner radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTubeY(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the tube whose central axis is aligned with the Y axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="outerRadius1">First outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius1">First inner radius from the range 0.01 - 100000.</param>
            <param name="outerRadius2">Second outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius2">Second inner radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTubeZ(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the tube whose central axis is aligned with the Z axis.
            </summary>
            <param name="stacks">Number of stacks from the range 1 - 100.</param>
            <param name="slices">Number of slices from the range 3 - 100.</param>
            <param name="length">Length from the range 0.01 - 100000.</param>
            <param name="outerRadius1">First outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius1">First inner radius from the range 0.01 - 100000.</param>
            <param name="outerRadius2">Second outer radius from the range 0.01 - 100000.</param>
            <param name="innerRadius2">Second inner radius from the range 0.01 - 100000.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateWall(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single[],System.Single[])">
            <summary>
            Creates the wall.
            </summary>
            <param name="position">Position of the wall.</param>
            <param name="normal">Normal vector of the wall.</param>
            <param name="positionsX">The X coordinates of wall vertices.</param>
            <param name="positionsY">The Y coordinates of wall vertices.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.CreateTriangle(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates the triangle.
            </summary>
            <param name="point1">Point of the triangle.</param>
            <param name="point2">Point of the triangle.</param>
            <param name="point3">Point of the triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetMesh(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Boolean,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[]@)">
            <summary>
            Returns the array MeshVertices with data of triangles.
            </summary>
            <param name="textureScale">Factor of the multiplication of coordinates of the texture. Usually x = 1, y = 1</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="flipNormals">Flag of reversing the direction of normal vectors.</param>
            <param name="smoothNormals">Flag of smoothing the normal vectors.</param>
            <param name="meshVertices">The array of VertexPositionNormalTexture elements.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetMeshVertices(System.Boolean,System.Boolean,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[]@)">
            <summary>
            Returns the array MeshVertices with data of vertices.
            </summary>
            <param name="flipNormals">Flag of reversing the direction of normal vectors.</param>
            <param name="smoothNormals">Flag of smoothing the normal vectors.</param>
            <param name="meshVertices">The array of VertexPositionNormalTexture elements.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetMeshIndices(System.Boolean,System.UInt16[]@)">
            <summary>
            Returns the array MeshIndices with data of triangles indices.
            </summary>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="meshIndices">The array of 16-bit indices.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetMeshIndices(System.Boolean,System.Int32[]@)">
            <summary>
            Returns the array MeshIndices with data of triangles indices.
            </summary>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="meshIndices">The array of 32-bit indices.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.GetMeshEdges(Komires.MataliPhysics.Edge[]@)">
            <summary>
            Returns the array MeshEdges with data of triangles edges.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMesh.Update(System.Boolean,System.Boolean)">
            <summary>
            Updates the TriangleMesh object.
            </summary>
            <param name="calculateVertexNormals">Enables or disables calculating the normal vectors of vertices.</param>
            <param name="calculateTextures">Enables or disables calculating the texture's coordinates.</param>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.TriangleMeshRegionManager">
            <summary>
            Gets the TriangleMeshRegionManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.IsEnveloped">
            <summary>
            Returns whether the TriangleMesh object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.Name">
            <summary>
            Gets or sets name of the triangle mesh.
            Name must be unique in the TriangleMeshManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.Index">
            <summary>
            Gets the index of triangle mesh in the TriangleMeshManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.TriangleMeshType">
            <summary>
            Gets type of the triangle mesh. Default to None.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMesh.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleMeshRegion">
            <summary>
            The TriangleMeshRegion object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegion.GetMesh(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Boolean,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[]@)">
            <summary>
            Returns the array MeshVertices with data of triangles.
            </summary>
            <param name="textureScale">Factor of the multiplication of coordinates of the texture. Usually x = 1, y = 1</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="flipNormals">Flag of reversing the direction of normal vectors.</param>
            <param name="smoothNormals">Flag of smoothing the normal vectors.</param>
            <param name="meshVertices">The array of VertexPositionNormalTexture elements.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegion.GetMeshVertices(System.Boolean,System.Boolean,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[]@)">
            <summary>
            Returns the array MeshVertices with data of vertices.
            </summary>
            <param name="flipNormals">Flag of reversing the direction of normal vectors.</param>
            <param name="smoothNormals">Flag of smoothing the normal vectors.</param>
            <param name="meshVertices">The array of VertexPositionNormalTexture elements.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegion.GetMeshIndices(System.Boolean,System.UInt16[]@)">
            <summary>
            Returns the array MeshIndices with data of triangles indices.
            </summary>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="meshIndices">The array of 16-bit indices.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegion.GetMeshIndices(System.Boolean,System.Int32[]@)">
            <summary>
            Returns the array MeshIndices with data of triangles indices.
            </summary>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="meshIndices">The array of 32-bit indices.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegion.GetMeshEdges(Komires.MataliPhysics.Edge[]@)">
            <summary>
            Returns the array MeshEdges with data of triangles edges.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.TriangleMesh">
            <summary>
            Gets the TriangleMesh object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.VertexManager">
            <summary>
            Gets the VertexManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.TriangleManager">
            <summary>
            Gets the TriangleManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.IsEnveloped">
            <summary>
            Returns whether the TriangleMeshRegion object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.Name">
            <summary>
            Gets or sets name of the triangle.
            Name must be unique in the TriangleMeshRegionManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.Index">
            <summary>
            Gets the index of region in the TriangleMeshRegionManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegion.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleMeshRegionManager">
            <summary>
            The TriangleMeshRegionManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Get(System.Int32)">
            <summary>
            Gets the region with the specified index. 
            </summary>
            <param name="index">Index of the region in the TriangleMeshRegionManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Create(System.String)">
            <summary>
            Creates the region with the specified name. 
            Name must be unique in the TriangleMeshRegionManager.
            </summary>
            <param name="name">Name of the region.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Contains(System.String)">
            <summary>
            Determines whether the region is in the TriangleMeshRegionManager. 
            </summary>
            <param name="name">Name of the region to locate in the TriangleMeshRegionManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Contains(Komires.MataliPhysics.TriangleMeshRegion)">
            <summary>
            Determines whether the region is in the TriangleMeshRegionManager. 
            </summary>
            <param name="triangleMeshRegion">Region to locate in the TriangleMeshRegionManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Find(System.String)">
            <summary>
            Searches for the region in the TriangleMeshRegionManager. 
            </summary>
            <param name="name">Name of the region to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Find(System.Int32)">
            <summary>
            Searches for the region in the TriangleMeshRegionManager. 
            </summary>
            <param name="index">Index of the region to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Remove(System.String)">
            <summary>
            Removes the region from the TriangleMeshRegionManager. 
            </summary>
            <param name="name">Name of the region to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Remove(System.Int32)">
            <summary>
            Removes the region from the TriangleMeshRegionManager. 
            </summary>
            <param name="index">Index of the region to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.Remove(Komires.MataliPhysics.TriangleMeshRegion)">
            <summary>
            Removes the region from the TriangleMeshRegionManager. 
            </summary>
            <param name="triangleMeshRegion">Region to remove from the TriangleMeshRegionManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshRegionManager.RemoveAll">
            <summary>
            Removes all regions from the TriangleMeshRegionManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegionManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegionManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegionManager.TriangleMesh">
            <summary>
            Gets the TriangleMesh object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegionManager.IsEnveloped">
            <summary>
            Returns whether the TriangleMeshRegionManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshRegionManager.Count">
            <summary>
            Gets the number of triangle mesh regions managed by the TriangleMeshRegionManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsSound">
            <summary>
            The PhysicsSound object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.GetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the sound position. 
            </summary>
            <param name="position">The sound position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.SetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the sound position. 
            </summary>
            <param name="position">The sound position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.SetPosition(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the sound position. 
            </summary>
            <param name="position">The sound position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Sets the sound position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.GetDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the sound direction. 
            </summary>
            <param name="direction">The sound direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.SetDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the sound direction. 
            </summary>
            <param name="direction">The sound direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.SetDirection(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the sound direction. 
            </summary>
            <param name="direction">The sound direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSound.SetDirection(System.Single,System.Single,System.Single)">
            <summary>
            Sets the sound direction. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSound.IsEnveloped">
            <summary>
            Returns whether the PhysicsSound object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSound.Enabled">
            <summary>
            Enables or disables the sound.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSound.Volume">
            <summary>
            Gets or sets the volume of sound. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSound.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSound.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSound.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsObject">
            <summary>
            The PhysicsObject object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.CreateCamera(System.Boolean)">
            <summary>
            Creates the PhysicsCamera object. 
            </summary>
            <param name="enabled">Enables or disables the camera.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.CreateLight(System.Boolean)">
            <summary>
            Creates the PhysicsLight object. 
            </summary>
            <param name="enabled">Enables or disables the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetLocalGravityDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the local gravity direction for the physics object. Default to x = 0, y = 0, z = 0.
            </summary>
            <param name="localGravityDirection">The local gravity direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.SetLocalGravityDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the local gravity direction for the physics object. Default to x = 0, y = 0, z = 0.
            </summary>
            <param name="localGravityDirection">The local gravity direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.SetLocalGravityDirection(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the local gravity direction for the physics object. Default to x = 0, y = 0, z = 0.
            </summary>
            <param name="localGravityDirection">The local gravity direction.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.SetLocalGravityDirection(System.Single,System.Single,System.Single)">
            <summary>
            Sets the local gravity direction for the physics object. Default to x = 0, y = 0, z = 0.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetBoundingBox(Microsoft.Xna.Framework.BoundingBox@)">
            <summary>
            Gets the bounding box of physics object.
            </summary>
            <param name="boundingBox">The bounding box of physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetBoundingSphere(Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Gets the bounding sphere of physics object.
            </summary>
            <param name="boundingSphere">The bounding sphere of physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.AddPhysicsObject(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Adds the physics object to the owner.
            </summary>
            <param name="physicsObject">Physics object to add.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetPhysicsObject(System.Int32)">
            <summary>
            Gets the physics object at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - PhysicsObjectCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollidingPhysicsObject(System.Int32)">
            <summary>
            Gets the colliding physics object at the specified position after the update with method UpdateCollidingPhysicsObjects. 
            </summary>
            <param name="position">Position from the range 0 - CollidingPhysicsObjectCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairPhysicsObject1(System.Int32)">
            <summary>
            Gets the first physics object of collision pair at the specified position after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairPhysicsObject2(System.Int32)">
            <summary>
            Gets the second physics object of collision pair at the specified position after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairContactPointCount(System.Int32)">
            <summary>
            Gets the number of contact points of collision pair at the specified position after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairContactPointAnchor1(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the first anchor point of contact point of collision pair at the specified positions of collision pair and contact point after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - UpdatedContactPointCount.</param>
            <param name="anchor">The first anchor point of the contact point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairContactPointAnchor2(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the second anchor point of contact point of collision pair at the specified positions of collision pair and contact point after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - UpdatedContactPointCount.</param>
            <param name="anchor">The second anchor point of the contact point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairContactPointNormal(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the normal of collision pair in contact point at the specified positions of collision pair and contact point after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - UpdatedContactPointCount.</param>
            <param name="normal">The normal of the contact point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairContactPointDepth(System.Int32,System.Int32)">
            <summary>
            Gets the collision depth of collision pair in contact point at the specified positions of collision pair and contact point after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - UpdatedContactPointCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetUpdatedCollisionPairContactPointImpactFactor(System.Int32,System.Int32)">
            <summary>
            Gets the impact factor of collision pair in contact point at the specified positions of collision pair and contact point after the update with method UpdateCollisionPairs. 
            </summary>
            <param name="position">Position from the range 0 - UpdatedCollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - UpdatedContactPointCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairPhysicsObject1(System.Int32)">
            <summary>
            Gets the first physics object of collision pair at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairPhysicsObject2(System.Int32)">
            <summary>
            Gets the second physics object of collision pair at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairContactPointCount(System.Int32)">
            <summary>
            Gets the number of contact points of collision pair at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairContactPointAnchor1(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the first anchor point of contact point of collision pair at the specified positions of collision pair and contact point. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - ContactPointCount.</param>
            <param name="anchor">The first anchor point of the contact point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairContactPointAnchor2(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the second anchor point of contact point of collision pair at the specified positions of collision pair and contact point. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - ContactPointCount.</param>
            <param name="anchor">The second anchor point of the contact point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairContactPointNormal(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the normal of collision pair in contact point at the specified positions of collision pair and contact point. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - ContactPointCount.</param>
            <param name="normal">The normal of the contact point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairContactPointDepth(System.Int32,System.Int32)">
            <summary>
            Gets the collision depth of collision pair in contact point at the specified positions of collision pair and contact point. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - ContactPointCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetCollisionPairContactPointImpactFactor(System.Int32,System.Int32)">
            <summary>
            Gets the impact factor of collision pair in contact point at the specified positions of collision pair and contact point. 
            </summary>
            <param name="position">Position from the range 0 - CollisionPairCount.</param>
            <param name="positionContactPoint">Position from the range 0 - ContactPointCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetDisableCollision(System.Int32)">
            <summary>
            Gets the disable collision physics object at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - DisableCollisionCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.GetConstraint(System.Int32)">
            <summary>
            Gets the constraint at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ConstraintCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.FindFirstCollisionPair(System.Int32@)">
            <summary>
            Searches for the position of the first collision pair for colliding physics object.
            The method always searches the owner of the rigid group of the physics object in order to find the collision pair.
            The returned value is an position of collision pair for the owner of the rigid group RigidGroupOwner.
            </summary>
            <param name="position">Returned position of the first collision pair.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.FindNextCollisionPair(System.Int32@)">
            <summary>
            Searches for the position of the next collision pair for colliding physics object. 
            The method always searches the owner of the rigid group of the physics object in order to find the collision pair.
            The returned value is an position of collision pair for the owner of the rigid group RigidGroupOwner.
            </summary>
            <param name="position">Returned position of the next collision pair.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.FindPhysicsObject(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for the physics object with the specified name. 
            </summary>
            <param name="name">Name of the physics object to search for.</param>
            <param name="propagateToChild">Search the hierarchy if true.</param>
            <param name="trimName">Compare names to the length Name.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.FindPhysicsObject(System.Int32,System.Boolean)">
            <summary>
            Searches for the physics object with the specified index. 
            </summary>
            <param name="index">Index of the physics object to search for.</param>
            <param name="propagateToChild">Search the hierarchy if true.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.FindPhysicsObject(Komires.MataliPhysics.PhysicsObject,System.Boolean)">
            <summary>
            Determines whether the specified physics object is owned by the current physics object. 
            </summary>
            <param name="physicsObject">The physics object to locate in owned physics objects.</param>
            <param name="propagateToChild">Search the hierarchy if true.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.RemovePhysicsObject(System.String)">
            <summary>
            Removes the physics object with the specified name from the owned physics objects. 
            </summary>
            <param name="name">Name of the physics object to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.RemovePhysicsObject(System.Int32)">
            <summary>
            Removes the physics object with the specified index from the owned physics objects. 
            </summary>
            <param name="index">Index of the physics object to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.RemovePhysicsObject(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Removes the physics object from the owned physics objects. 
            </summary>
            <param name="physicsObject">The physics object to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.RemoveAllPhysicsObjects">
            <summary>
            Removes all owned physics objects. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsDisableCollision(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Returns whether the specified physics object is in the disable collisions.
            </summary>
            <param name="physicsObject">The physics object to test.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsColliding">
            <summary>
            Returns whether the current physics object is colliding with another physics object.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsColliding(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Returns whether the specified physics object is colliding with the current physics object.
            </summary>
            <param name="physicsObject">The physics object to test.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsColliding(Komires.MataliPhysics.PhysicsObject,Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Returns whether the specified physics objects are colliding with themselves.
            </summary>
            <param name="physicsObject1">The physics object to test.</param>
            <param name="physicsObject2">The physics object to test.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateCollidingPhysicsObjects(System.Boolean)">
            <summary>
            Updates the list of physics objects colliding with the current physics object.
            </summary>
            <param name="rigidGroup">Determines whether the rigid groups will be returned.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateCollisionPairs(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Updates the list of collision pairs for the current physics object colliding with the specified physics object.
            </summary>
            <param name="collisionPhysicsObject">Physics object to test.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateCollisionPairs(System.Collections.Generic.List{Komires.MataliPhysics.PhysicsObject})">
            <summary>
            Updates the list of collision pairs for the current physics object colliding with the specified physics objects.
            </summary>
            <param name="collisionPhysicsObjects">Physics objects to test.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateCollisionPairs(System.Collections.Generic.List{System.Int32})">
            <summary>
            Updates the list of collision pairs for the current physics object colliding with the physics objects of collision controller.
            </summary>
            <param name="collisions">Physics objects of collision controller.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateFeedbackForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Updates the feedback with given force for the current physics object.
            </summary>
            <param name="force">Feedback force.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsIntersects(Microsoft.Xna.Framework.Ray@,System.Single,System.Boolean,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Returns whether the ray intersects the physics object.
            </summary>
            <param name="ray">Cast ray.</param>
            <param name="margin">Margin of the ray.</param>
            <param name="testBounding">Flag of testing the bounding box.</param>
            <param name="hitPosition">Position of the intersection.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsIntersects(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,System.Boolean,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Returns whether the segment intersects the physics object.
            </summary>
            <param name="startPosition">Start of the segment.</param>
            <param name="endPosition">End of the segment.</param>
            <param name="margin">Margin of the segment.</param>
            <param name="testBounding">Flag of testing the bounding box.</param>
            <param name="hitPosition">Position of the intersection.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.IsIntersects(Komires.MataliPhysics.PhysicsObject,System.Boolean)">
            <summary>
            Returns whether the specified physics object intersects current physics object.
            </summary>
            <param name="physicsObject">Physics object to test.</param>
            <param name="testBounding">Flag of testing the bounding box.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.DisableCollision(Komires.MataliPhysics.PhysicsObject,System.Boolean)">
            <summary>
            Enables or disables the collisions between the current and specify physics object.
            </summary>
            <param name="physicsObject">The physics object to filter.</param>
            <param name="disableCollision">Flag of the collisions.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateFromInitLocalTransform">
            <summary>
            Updates the MainWorldTransform from the InitLocalTransform for the physics object.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateFromMainLocalTransform">
            <summary>
            Updates the MainWorldTransform from the MainLocalTransform for the physics object.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UpdateMainTransform">
            <summary>
            Updates the MainWorldTransform and MainLocalTransform for the physics object when it is necessary.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.RecalculateMainTransform">
            <summary>
            Recalculates the MainWorldTransform for the physics object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.Project(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Graphics.Viewport@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Calculates the position of point in screen space for the position of point in world space.
            </summary>
            <param name="worldPosition">Position of point in the world space.</param>
            <param name="viewport">Viewport of the screen.</param>
            <param name="view">View matrix.</param>
            <param name="world">World matrix.</param>
            <param name="projection">Projection matrix.</param>
            <param name="screenPosition">Position of point in the screen space</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UnProject(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Graphics.Viewport@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Calculates the position of point in world space for the position of point in screen space.
            </summary>
            <param name="screenPosition">Position of point in the screen space.</param>
            <param name="viewport">Viewport of the screen.</param>
            <param name="view">View matrix.</param>
            <param name="world">World matrix.</param>
            <param name="projection">Projection matrix.</param>
            <param name="worldPosition">Position of point in the world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsObject.UnProjectToRay(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Graphics.Viewport@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Calculates the ray position and direction in world space for the position of point in screen space.
            </summary>
            <param name="screenPosition">Position of point in the screen space.</param>
            <param name="viewport">Viewport of the screen.</param>
            <param name="view">View matrix.</param>
            <param name="world">World matrix.</param>
            <param name="projection">Projection matrix.</param>
            <param name="worldPosition">Position of point in the world space.</param>
            <param name="worldDirection">Direction of point in the world space.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Integral">
            <summary>
            Gets the Integral object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Camera">
            <summary>
            Gets the PhysicsCamera object created by the CreateCamera method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Light">
            <summary>
            Gets the PhysicsLight object created by the CreateLight method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Material">
            <summary>
            Gets the PhysicsMaterial object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Sound">
            <summary>
            Gets the PhysicsSound object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Shape">
            <summary>
            Gets or sets the Shape object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Parent">
            <summary>
            Gets the parent physics object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.RigidGroupOwner">
            <summary>
            Gets the owner of the rigid group of the physics objects. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.SeparateGroupOwner">
            <summary>
            Gets the owner of the separate group of the physics objects. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.InitLocalTransform">
            <summary>
            Gets the initial transformation in the local space. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.InitWorldTransform">
            <summary>
            Gets the initial transformation in the world space. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MainLocalTransform">
            <summary>
            Gets the main transformation in the local space. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MainWorldTransform">
            <summary>
            Gets the main transformation in the world space. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.WorldAccumulator">
            <summary>
            Gets the accumulator in the world space. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.InternalControllers">
            <summary>
            Gets the InternalControllers object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.UserControllers">
            <summary>
            Gets the UserControllers object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.IsEnveloped">
            <summary>
            Returns whether the PhysicsObject object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Name">
            <summary>
            Gets or sets name of the physics object.
            Name must be unique in the PhysicsObjectManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.Index">
            <summary>
            Gets the index of physics object in the PhysicsObjectManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.TransformPriority">
            <summary>
            Indicates the order in which the physics objects with the Transform user controllers will be transformed. 
            Lower value means earlier transforming. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.PostTransformPriority">
            <summary>
            Indicates the order in which the physics objects with the PostTransform user controllers will be transformed. 
            Lower value means earlier transforming. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.DrawPriority">
            <summary>
            Indicates the order in which the physics objects with the Draw user controllers will be drawn. 
            Lower value means earlier drawing. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.PostDrawPriority">
            <summary>
            Indicates the order in which the physics objects with the PostDraw user controllers will be drawn. 
            Lower value means earlier drawing. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.PhysicsObjectCount">
            <summary>
            Gets the number of physics objects owned by physics object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.CollidingPhysicsObjectCount">
            <summary>
            Gets the number of physics objects colliding with the current physics object. This number is updated by the UpdateCollidingPhysicsObjects method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.UpdatedCollisionPairCount">
            <summary>
            Gets the number of objects CollisionPair. This number is updated by the UpdateCollisionPairs method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.CollisionPairCount">
            <summary>
            Gets the number of objects CollisionPair owned by physics object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.DisableCollisionCount">
            <summary>
            Gets the number of disable collisions owned by physics object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.ConstraintCount">
            <summary>
            Gets the number of objects Constraint owned by physics object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.SeparateGroup">
            <summary>
            Gets or sets the flag of the separate group of the physics object.
            The flag equal the true means the separate physics object. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableCollisions">
            <summary>
            Enables or disables the collisions. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableResponseToCollisions">
            <summary>
            Enables or disables the response to collisions. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableCursorInteraction">
            <summary>
            Enables or disables interaction of the cursor with physics object. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableScreenToRayInteraction">
            <summary>
            Enables or disables interaction of the ray with physics object for the ScreenToRay controller. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableBreakRigidGroup">
            <summary>
            Enables or disables breaking rigid group for physics object. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableDrawing">
            <summary>
            Enables or disables drawing of the physics object. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableMoving">
            <summary>
            Enables or disables moving of the physics object. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableFeedback">
            <summary>
            Enables or disables feedback for the physics object. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableParticleCollisions">
            <summary>
            Enables or disables collisions between physics objects. Collisions are avoided when the flags of both physics objects are disabled.
            Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableLocalGravity">
            <summary>
            Enables or disables local gravity for the physics object. Gravity of the scene is disabled for enabled local gravity.
            Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.LocalGravityAcceleration">
            <summary>
            Gets or sets the local gravity acceleration for the physics object. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MinResponseLinearVelocity">
            <summary>
            Gets or sets minimum response linear velocity for the physics object.
            Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MinResponseAngularVelocity">
            <summary>
            Gets or sets minimum response angular velocity for the physics object.
            Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.IsInFluid">
            <summary>
            Returns whether the physics object is in the fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.IsUnderFluidSurface">
            <summary>
            Returns whether the physics object is under fluid surface.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.FluidPhysicsObject">
            <summary>
            Returns the object with fluid controller when the current physics object is in the fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.IsBrokenRigidGroup">
            <summary>
            Returns whether rigid group of the physics object was destroyed. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.IsStatic">
            <summary>
            Returns whether the physics object is static. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxSleepTime">
            <summary>
            Gets or sets maximum time of sleep of the physics object. Default to 2 seconds.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxSleepLinearVelocity">
            <summary>
            Gets or sets maximum linear velocity of sleep of the physics object. Default to 0.4.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxSleepAngularVelocity">
            <summary>
            Gets or sets maximum angular velocity of sleep of the physics object. Default to 0.4.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.FluidMaxSleepTime">
            <summary>
            Gets or sets maximum time of sleep of the physics object in the fluid. Default to 1 second.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.FluidMaxSleepLinearVelocity">
            <summary>
            Gets or sets maximum linear velocity of sleep of the physics object in the fluid. Default to 0.04.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.FluidMaxSleepAngularVelocity">
            <summary>
            Gets or sets maximum angular velocity of sleep of the physics object in the fluid. Default to 0.04.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.FluidPressureFactor">
            <summary>
            Gets or sets factor of the fluid pressure from the range 0 - 10. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxPreUpdateLinearVelocity">
            <summary>
            Gets or sets maximum linear velocity of the physics object before the update of collisions and constraints. Default to 100000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxPreUpdateAngularVelocity">
            <summary>
            Gets or sets maximum angular velocity of the physics object before the update of collisions and constraints. Default to 1000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxPostUpdateLinearVelocity">
            <summary>
            Gets or sets maximum linear velocity of the physics object after the update of collisions and constraints. Default to 100000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxPostUpdateAngularVelocity">
            <summary>
            Gets or sets maximum angular velocity of the physics object after the update of collisions and constraints. Default to 1000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.IsSleeping">
            <summary>
            Returns whether the physics object is sleeping.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.EnableSleeping">
            <summary>
            Enables or disables sleeping of the physics object. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxDisableCollisionFrameCount">
            <summary>
            Gets or sets the number of frames during which the physics object is active in DisableCollision.
            Value 0 means all frames. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.MaxSimulationFrameCount">
            <summary>
            Gets or sets the number of frames during which the physics object exists.
            Value 0 means all frames. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.RemovePhysicsObjectsFromManagerAfterMaxSimulationFrameCount">
            <summary>
            Gets or sets the flag of removing physics objects from physics objects manager after the expiry of the number of frames determined by the counter MaxSimulationFrameCount.
            Physics objects will always be removed from the scene. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsObject.RemoveConstraintsFromManagerAfterMaxSimulationFrameCount">
            <summary>
            Gets or sets the flag of removing constraints from the constraint manager for physics objects after the expiry of the number of frames determined by the counter MaxSimulationFrameCount.
            Constraints will always be removed from the scene. Default to true.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Accumulator">
            <summary>
            The Accumulator object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.GetTotalWorldForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the total force defined in world space. 
            </summary>
            <param name="force">The total force defined in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetTotalWorldForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the total force defined in world space. 
            </summary>
            <param name="force">The total force defined in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetTotalWorldForce(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the total force defined in world space. 
            </summary>
            <param name="force">The total force defined in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetTotalWorldForce(System.Single,System.Single,System.Single)">
            <summary>
            Sets the total force defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.GetTotalWorldTorque(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the total torque defined in world space. 
            </summary>
            <param name="torque">The total torque defined in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetTotalWorldTorque(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the total torque defined in world space. 
            </summary>
            <param name="torque">The total torque defined in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetTotalWorldTorque(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the total torque defined in world space. 
            </summary>
            <param name="torque">The total torque defined in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetTotalWorldTorque(System.Single,System.Single,System.Single)">
            <summary>
            Sets the total torque defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total force defined in local space. 
            </summary>
            <param name="force">Force in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForce(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total force defined in local space. 
            </summary>
            <param name="force">Force in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForce(System.Single,System.Single,System.Single)">
            <summary>
            Sets total force defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForceAtLocalPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForceAtLocalPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForceAtWorldPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalForceAtWorldPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalTorque(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total torque defined in local space. 
            </summary>
            <param name="torque">Torque in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalTorque(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total torque defined in local space. 
            </summary>
            <param name="torque">Torque in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetLocalTorque(System.Single,System.Single,System.Single)">
            <summary>
            Sets total torque defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total force defined in world space. 
            </summary>
            <param name="force">Force in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForce(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total force defined in world space. 
            </summary>
            <param name="force">Force in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForce(System.Single,System.Single,System.Single)">
            <summary>
            Sets total force defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForceAtLocalPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForceAtLocalPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForceAtWorldPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldForceAtWorldPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldTorque(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets total torque defined in world space. 
            </summary>
            <param name="torque">Torque in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldTorque(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets total torque defined in world space. 
            </summary>
            <param name="torque">Torque in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.SetWorldTorque(System.Single,System.Single,System.Single)">
            <summary>
            Sets total torque defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds force defined in local space. 
            </summary>
            <param name="force">Force in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForce(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds force defined in local space. 
            </summary>
            <param name="force">Force in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForce(System.Single,System.Single,System.Single)">
            <summary>
            Adds force defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForceAtLocalPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForceAtLocalPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForceAtWorldPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalForceAtWorldPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds force defined in local space and applied in the specified point. 
            </summary>
            <param name="force">Force in local space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalTorque(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds torque defined in local space. 
            </summary>
            <param name="torque">Torque in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalTorque(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds torque defined in local space. 
            </summary>
            <param name="torque">Torque in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddLocalTorque(System.Single,System.Single,System.Single)">
            <summary>
            Adds torque defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForce(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds force defined in world space. 
            </summary>
            <param name="force">Force in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForce(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds force defined in world space. 
            </summary>
            <param name="force">Force in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForce(System.Single,System.Single,System.Single)">
            <summary>
            Adds force defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForceAtLocalPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForceAtLocalPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForceAtWorldPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldForceAtWorldPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds force defined in world space and applied in the specified point. 
            </summary>
            <param name="force">Force in world space.</param>
            <param name="point">Point in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldTorque(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds torque defined in world space. 
            </summary>
            <param name="torque">Torque in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldTorque(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds torque defined in world space. 
            </summary>
            <param name="torque">Torque in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Accumulator.AddWorldTorque(System.Single,System.Single,System.Single)">
            <summary>
            Adds torque defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Accumulator.IsEnveloped">
            <summary>
            Returns whether the Accumulator object is enveloped. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.UserControllers">
            <summary>
            The UserControllers object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.UserControllers.UserSimulationMethodInvoke(System.String,System.Boolean,Komires.MataliPhysics.UserMethodArgs)">
            <summary>
            Allows invoke the user simulation method.
            </summary>
            <param name="userMethodName">Name of the user method.</param>
            <param name="trimName">Compare names to the length UserMethodName.</param>
            <param name="userMethodArgs">Arguments of the user method.</param>
        </member>
        <member name="M:Komires.MataliPhysics.UserControllers.UserDrawMethodInvoke(System.String,System.Boolean,Komires.MataliPhysics.UserMethodArgs)">
            <summary>
            Allows invoke the user draw method.
            </summary>
            <param name="userMethodName">Name of the user method.</param>
            <param name="trimName">Compare names to the length UserMethodName.</param>
            <param name="userMethodArgs">Arguments of the user method.</param>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.IsEnveloped">
            <summary>
            Returns whether the UserControllers object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.CollisionMethodArgs">
            <summary>
            Gets or sets the Collision method arguments.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.CollisionMethods">
            <summary>
            Gets or sets the Collision methods.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.TransformMethodArgs">
            <summary>
            Gets or sets the Transform method arguments.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.TransformMethods">
            <summary>
            Gets or sets the Transform methods.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.EnableTransform">
            <summary>
            Enables or disables the Transform methods. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.PostTransformMethodArgs">
            <summary>
            Gets or sets the PostTransform method arguments.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.PostTransformMethods">
            <summary>
            Gets or sets the PostTransform methods.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.EnablePostTransform">
            <summary>
            Enables or disables the PostTransform methods. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.DrawMethodArgs">
            <summary>
            Gets or sets the Draw method arguments.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.DrawMethods">
            <summary>
            Gets or sets the Draw methods.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.EnableDraw">
            <summary>
            Enables or disables the Draw methods. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.PostDrawMethodArgs">
            <summary>
            Gets or sets the PostDraw method arguments.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.PostDrawMethods">
            <summary>
            Gets or sets the PostDraw methods.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.EnablePostDraw">
            <summary>
            Enables or disables the PostDraw methods. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.UserSimulationMethods">
            <summary>
            Gets or sets the simulation methods invoked by the user.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserControllers.UserDrawMethods">
            <summary>
            Gets or sets the draw methods invoked by the user.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.VertexManager">
            <summary>
            The VertexManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Get(System.Int32)">
            <summary>
            Gets the vertex with the specified index. 
            </summary>
            <param name="index">Index of the vertex in the VertexManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Create(System.String)">
            <summary>
            Creates the vertex with the specified name. 
            Name must be unique in the VertexManager.
            </summary>
            <param name="name">Name of the vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Contains(System.String)">
            <summary>
            Determines whether the vertex is in the VertexManager. 
            </summary>
            <param name="name">Name of the vertex to locate in the VertexManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Contains(Komires.MataliPhysics.Vertex)">
            <summary>
            Determines whether the vertex is in the VertexManager. 
            </summary>
            <param name="vertex">Vertex to locate in the VertexManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Find(System.String)">
            <summary>
            Searches for the vertex in the VertexManager. 
            </summary>
            <param name="name">Name of the vertex to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Find(System.Int32)">
            <summary>
            Searches for the vertex in the VertexManager. 
            </summary>
            <param name="index">Index of the vertex to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Remove(System.String)">
            <summary>
            Removes the vertex from the VertexManager. 
            </summary>
            <param name="name">Name of the vertex to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Remove(System.Int32)">
            <summary>
            Removes the vertex from the VertexManager. 
            </summary>
            <param name="index">Index of the vertex to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.Remove(Komires.MataliPhysics.Vertex)">
            <summary>
            Removes the vertex from the VertexManager. 
            </summary>
            <param name="vertex">Vertex to remove from the VertexManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.VertexManager.RemoveAll">
            <summary>
            Removes all vertices from the VertexManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.VertexManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.VertexManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.VertexManager.TriangleMeshRegion">
            <summary>
            Gets the TriangleMeshRegion object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.VertexManager.IsEnveloped">
            <summary>
            Returns whether the VertexManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.VertexManager.Count">
            <summary>
            Gets the number of vertices managed by the VertexManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsSceneManager">
            <summary>
            The PhysicsSceneManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Get(System.Int32)">
            <summary>
            Gets the scene with the specified index. 
            </summary>
            <param name="index">Index of the scene in the PhysicsSceneManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Create(System.String)">
            <summary>
            Creates the scene with the specified name. 
            Name must be unique in the PhysicsSceneManager.
            </summary>
            <param name="name">Name of the scene.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Contains(System.String)">
            <summary>
            Determines whether the scene is in the PhysicsSceneManager. 
            </summary>
            <param name="name">Name of the scene to locate in the PhysicsSceneManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Contains(Komires.MataliPhysics.PhysicsScene)">
            <summary>
            Determines whether the scene is in the PhysicsSceneManager. 
            </summary>
            <param name="scene">Scene to locate in the PhysicsSceneManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Find(System.String)">
            <summary>
            Searches for the scene in the PhysicsSceneManager. 
            </summary>
            <param name="name">Name of the scene to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Find(System.Int32)">
            <summary>
            Searches for the scene in the PhysicsSceneManager. 
            </summary>
            <param name="index">Index of the scene to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Remove(System.String)">
            <summary>
            Removes the scene from the PhysicsSceneManager. 
            </summary>
            <param name="name">Name of the scene to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Remove(System.Int32)">
            <summary>
            Removes the scene from the PhysicsSceneManager. 
            </summary>
            <param name="index">Index of the scene to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.Remove(Komires.MataliPhysics.PhysicsScene)">
            <summary>
            Removes the scene from the PhysicsSceneManager. 
            </summary>
            <param name="scene">Scene to remove from the PhysicsSceneManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsSceneManager.RemoveAll">
            <summary>
            Removes all scenes from the PhysicsSceneManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneManager.IsEnveloped">
            <summary>
            Returns whether the PhysicsSceneManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsSceneManager.Count">
            <summary>
            Gets the number of scenes managed by the PhysicsSceneManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Frustum">
            <summary>
            The Frustum object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetFrustumMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the frustum matrix. 
            </summary>
            <param name="frustum">Frustum matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.Update(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Updates the frustum with specified view matrix multiplied by the projection matrix. 
            The projection matrix in right-handed coordinate system conventions requires the change of the sign of the Z axis by the ChangeAxisZ method from Projection class for the correct update of the frustum.
            </summary>
            <param name="viewProjection">The view matrix multiplied by the projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.Update(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Updates the frustum with specified view and projection matrices.
            The projection matrix in right-handed coordinate system conventions requires the change of the sign of the Z axis by the ChangeAxisZ method from Projection class for the correct update of the frustum.
            </summary>
            <param name="view">View matrix to update of the frustum.</param>
            <param name="projection">Projection matrix to update of the frustum.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetPlane(System.Int32,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum plane at the specified position.
            The order of frustum planes is following: near, far, right, left, top, bottom.
            </summary>
            <param name="position">Position from the range 0 - PlaneCount.</param>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetNearPlane(Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum near plane.
            </summary>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetFarPlane(Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum far plane.
            </summary>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetRightPlane(Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum right plane.
            </summary>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetLeftPlane(Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum left plane.
            </summary>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetTopPlane(Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum top plane.
            </summary>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetBottomPlane(Microsoft.Xna.Framework.Plane@)">
            <summary>
            Gets the frustum bottom plane.
            </summary>
            <param name="plane">The frustum plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Frustum.GetCorner(System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the frustum corner at the specified position.
            </summary>
            <param name="position">Position from the range 0 - CornerCount.</param>
            <param name="corner">The frustum corner.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Frustum.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Frustum.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Frustum.IsEnveloped">
            <summary>
            Returns whether the Frustum object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Frustum.FrustumPhysicsObject">
            <summary>
            Gets the physics object owned by frustum. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Frustum.PlaneCount">
            <summary>
            Gets the number of frustum planes. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Frustum.CornerCount">
            <summary>
            Gets the number of frustum corners. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.FluidController">
            <summary>
            The FluidController object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.FluidController.GetNormal(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the normal of fluid surface.
            </summary>
            <param name="normal">The normal of fluid surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.FluidController.CreateSinPerturbation(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the sinusoidal perturbation on the surface of dynamic fluid.
            </summary>
            <param name="positionX">The X position of perturbation on the fluid surface.</param>
            <param name="positionY">The Y position of perturbation on the fluid surface.</param>
            <param name="positionZ">The Z position of perturbation on the fluid surface.</param>
            <param name="amplitude">Amplitude of perturbation.</param>
            <param name="radius">Radius of perturbation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.FluidController.CreateCosPerturbation(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the cosinusoidal perturbation on the surface of dynamic fluid.
            </summary>
            <param name="positionX">The X position of perturbation on the fluid surface.</param>
            <param name="positionY">The Y position of perturbation on the fluid surface.</param>
            <param name="positionZ">The Z position of perturbation on the fluid surface.</param>
            <param name="amplitude">Amplitude of perturbation.</param>
            <param name="radius">Radius of perturbation.</param>
        </member>
        <member name="P:Komires.MataliPhysics.FluidController.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.FluidController.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.FluidController.IsEnveloped">
            <summary>
            Returns whether the FluidController object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.FluidController.Enabled">
            <summary>
            Enables or disables the FluidController.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleMeshManager">
            <summary>
            The TriangleMeshManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Get(System.Int32)">
            <summary>
            Gets the triangle mesh with the specified index. 
            </summary>
            <param name="index">Index of the triangle mesh in the TriangleMeshManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Create(System.String)">
            <summary>
            Creates the triangle mesh with the specified name. 
            Name must be unique in the TriangleMeshManager.
            </summary>
            <param name="name">Name of the triangle mesh.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Contains(System.String)">
            <summary>
            Determines whether the triangle mesh is in the TriangleMeshManager. 
            </summary>
            <param name="name">Name of the triangle mesh to locate in the TriangleMeshManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Contains(Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Determines whether the triangle mesh is in the TriangleMeshManager. 
            </summary>
            <param name="triangleMesh">TriangleMesh to locate in the TriangleMeshManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Find(System.String)">
            <summary>
            Searches for the triangle mesh in the TriangleMeshManager. 
            </summary>
            <param name="name">Name of the triangle mesh to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Find(System.Int32)">
            <summary>
            Searches for the triangle mesh in the TriangleMeshManager. 
            </summary>
            <param name="index">Index of the triangle mesh to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Remove(System.String)">
            <summary>
            Removes the triangle mesh from the TriangleMeshManager. 
            </summary>
            <param name="name">Name of the triangle mesh to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Remove(System.Int32)">
            <summary>
            Removes the triangle mesh from the TriangleMeshManager. 
            </summary>
            <param name="index">Index of the triangle mesh to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.Remove(Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Removes the triangle mesh from the TriangleMeshManager. 
            </summary>
            <param name="triangleMesh">TriangleMesh to remove from the TriangleMeshManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshManager.RemoveAll">
            <summary>
            Removes all triangle meshes from the TriangleMeshManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshManager.IsEnveloped">
            <summary>
            Returns whether the TriangleMeshManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshManager.Count">
            <summary>
            Gets the number of triangle meshes managed by the TriangleMeshManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsEngineFactory">
            <summary>
            The PhysicsEngineFactory object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngineFactory.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngineFactory.PhysicsSceneManager">
            <summary>
            Gets the PhysicsSceneManager object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngineFactory.IsEnveloped">
            <summary>
            Returns whether the PhysicsEngineFactory object is enveloped. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsCameraSortOrderType">
            <summary>
            Types of sort order of physics objects for camera. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsCameraSortOrderType.DrawPriority">
            <summary>
            Sort order by the draw priorities Draw. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsCameraSortOrderType.DrawPriorityUserTagInt">
            <summary>
            Sort order by the draw priorities Draw and user tag UserTagInt. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsCameraSortOrderType.DrawPriorityShapePrimitiveType">
            <summary>
            Sort order by the draw priorities Draw and type of primitive shape. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsCameraSortOrderType.PostDrawPriority">
            <summary>
            Sort order by the draw priorities PostDraw. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsCameraSortOrderType.PostDrawPriorityUserTagInt">
            <summary>
            Sort order by the draw priorities PostDraw and user tag UserTagInt. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.PhysicsCameraSortOrderType.PostDrawPriorityShapePrimitiveType">
            <summary>
            Sort order by the draw priorities PostDraw and type of primitive shape. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsCamera">
            <summary>
            The PhysicsCamera object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetEuler(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the user variable determining the Euler angles of the camera.
            </summary>
            <param name="euler">Euler angles value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the user variable determining the Euler angles of the camera.
            </summary>
            <param name="euler">Euler angles value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the user variable determining the Euler angles of the camera.
            </summary>
            <param name="euler">Euler angles value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(System.Single,System.Single,System.Single)">
            <summary>
            Sets the user variable determining the Euler angles of the camera.
            </summary>
            <param name="x">The x angle.</param>
            <param name="y">The y angle.</param>
            <param name="z">The z angle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetOrientation(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Gets the user variable determining the orientation of the camera. 
            </summary>
            <param name="orientation">Orientation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetOrientation(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Sets the user variable determining the orientation of the camera. 
            </summary>
            <param name="orientation">Orientation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetOrientation(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Sets the user variable determining the orientation of the camera. 
            </summary>
            <param name="orientation">Orientation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetOrientation(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the user variable determining the orientation of the camera. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the user variable determining the rotation of the camera. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetTransposeRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the user variable determining the transpose rotation of the camera. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the user variable determining the rotation of the camera. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetRotation(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the user variable determining the rotation of the camera. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetTransposeRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the user variable determining the transpose rotation of the camera. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetTransposeRotation(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the user variable determining the transpose rotation of the camera. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Sets Euler angles from the orientation. 
            </summary>
            <param name="orientation">Orientation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Sets Euler angles from the orientation. 
            </summary>
            <param name="orientation">Orientation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets Euler angles from the orientation. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets Euler angles from the rotation. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SetEuler(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets Euler angles from the rotation. 
            </summary>
            <param name="rotation">Rotation value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.UpdateFrustum">
            <summary>
            Updates the frustum. 
            The frustum is calculated from the View and Projecjon objects.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.UpdatePhysicsObjects(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the lists of visible physics objects with active EnableDrawing flag from the acitve camera. 
            </summary>
            <param name="detectLight">Enables or disables filtering the visible physics objects with the lights and with active EnableDrawing flag.</param>
            <param name="detectTransparent">Enables or disables filtering the visible transparent physics objects with active EnableDrawing flag.</param>
            <param name="light">Enables or disables updating the list of visible physics objects with the lights and with active EnableDrawing flag.</param>
            <param name="transparent">Enables or disables updating the list of visible transparent physics objects with active EnableDrawing flag.</param>
            <param name="draw">Enables or disables updating the list of visible physics objects with active EnableDrawing flag.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SortDrawPhysicsObjects(Komires.MataliPhysics.PhysicsCameraSortOrderType)">
            <summary>
            Sorts the list of visible physics objects with active EnableDrawing flag. 
            </summary>
            <param name="physicsCameraSortOrderType">Sort order of physics objects for camera.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SortTransparentPhysicsObjects(Komires.MataliPhysics.PhysicsCameraSortOrderType)">
            <summary>
            Sorts the list of visible transparent physics objects with active EnableDrawing flag. 
            </summary>
            <param name="physicsCameraSortOrderType">Sort order of physics objects for camera.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.SortLightPhysicsObjects(Komires.MataliPhysics.PhysicsCameraSortOrderType)">
            <summary>
            Sorts the list of visible physics objects with the lights with active EnableDrawing flag. 
            </summary>
            <param name="physicsCameraSortOrderType">Sort order of physics objects for camera.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetVisiblePhysicsObject(System.Int32)">
            <summary>
            Gets the visible physics object at the specified position after the update with method UpdatePhysicsObjects.
            </summary>
            <param name="position">Position from the range 0 - VisiblePhysicsObjectCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetDrawPhysicsObject(System.Int32)">
            <summary>
            Gets the visible physics object at the specified position after the update with method UpdatePhysicsObjects. Visible physics objects have active the EnableDrawing flag and are sorted by draw priorities Draw or PostDraw.
            </summary>
            <param name="position">Position from the range 0 - DrawPhysicsObjectCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetTransparentPhysicsObject(System.Int32)">
            <summary>
            Gets the visible transparent physics object at the specified position after the update with method UpdatePhysicsObjects. Visible transparent physics objects have active the EnableDrawing flag and are sorted by draw priorities Draw or PostDraw.
            </summary>
            <param name="position">Position from the range 0 - TransparentPhysicsObjectCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsCamera.GetLightPhysicsObject(System.Int32)">
            <summary>
            Gets the visible physics object with the light at the specified position after the update with method UpdatePhysicsObjects. Visible physics objects have active the EnableDrawing flag and are sorted by draw priorities Draw or PostDraw.
            </summary>
            <param name="position">Position from the range 0 - LightPhysicsObjectCount.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.View">
            <summary>
            Gets the View object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.Projection">
            <summary>
            Gets the Projection object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.Frustum">
            <summary>
            Gets the Frustum object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.IsEnveloped">
            <summary>
            Returns whether the Camera object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.Enabled">
            <summary>
            Enables or disables the camera.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.Active">
            <summary>
            Gets or sets the activity flag of the camera. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.EnableControl">
            <summary>
            Enables or disables the flag of the control of the camera. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.UserTagObj">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.UserTagStr">
            <summary>
            Gets or sets tag of the user. Default to null.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.UserTagInt">
            <summary>
            Gets or sets tag of the user. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.VisiblePhysicsObjectCount">
            <summary>
            Gets the number of visible physics objects from the active camera. This number is updated by the UpdatePhysicsObjects method.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.DrawPhysicsObjectCount">
            <summary>
            Gets the number of visible physics objects with the active EnableDrawing flag. This number is updated by the UpdatePhysicsObjects method. The camera must be active.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.TransparentPhysicsObjectCount">
            <summary>
            Gets the number of visible transparent physics objects with the active EnableDrawing flag. This number is updated by the UpdatePhysicsObjects method. The camera must be active.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsCamera.LightPhysicsObjectCount">
            <summary>
            Gets the number of visible physics objects with the light and with the active EnableDrawing flag. This number is updated by the UpdatePhysicsObjects method. The camera must be active.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.HeightmapController">
            <summary>
            The HeightmapController object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetHeightmapPosition(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets position for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="position">The position of point on the heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetHeightmapPosition(System.Single,System.Single,System.Single,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets position for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionY">The Y position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetHeightmapNearestPosition(System.Single,System.Single,System.Single,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets nearest position for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="heightmapPositionX">The X position of heightmap nearest point.</param>
            <param name="heightmapPositionY">The Y position of heightmap nearest point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap nearest point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetHeight(System.Single,System.Single,System.Single)">
            <summary>
            Gets height for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetHeight(System.Int32,System.Int32)">
            <summary>
            Gets height for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.SetHeight(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets height for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="height">Height value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.SetHeight(System.Int32,System.Int32,System.Single)">
            <summary>
            Sets height for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="height">Height value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.AddHeight(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds height for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="height">Height value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.AddHeight(System.Int32,System.Int32,System.Single)">
            <summary>
            Adds height for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="height">Height value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetFriction(System.Single,System.Single,System.Single)">
            <summary>
            Gets friction for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetFriction(System.Int32,System.Int32)">
            <summary>
            Gets friction for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.SetFriction(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets friction for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="friction">Friction value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.SetFriction(System.Int32,System.Int32,System.Single)">
            <summary>
            Sets friction for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="friction">Friction value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.AddFriction(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds friction for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="friction">Friction value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.AddFriction(System.Int32,System.Int32,System.Single)">
            <summary>
            Adds friction for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="friction">Friction value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetRestitution(System.Single,System.Single,System.Single)">
            <summary>
            Gets restitution for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetRestitution(System.Int32,System.Int32)">
            <summary>
            Gets restitution for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.SetRestitution(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets restitution for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="restitution">Restitution value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.SetRestitution(System.Int32,System.Int32,System.Single)">
            <summary>
            Sets restitution for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="restitution">Restitution value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.AddRestitution(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds restitution for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="restitution">Restitution value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.AddRestitution(System.Int32,System.Int32,System.Single)">
            <summary>
            Adds restitution for any point on the heightmap surface.
            </summary>
            <param name="heightmapPositionX">The X position of heightmap point.</param>
            <param name="heightmapPositionZ">The Z position of heightmap point.</param>
            <param name="restitution">Restitution value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.GetNormal(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets normal vector for any point on the heightmap surface.
            </summary>
            <param name="positionX">The X position of point on the heightmap surface.</param>
            <param name="positionY">The Y position of point on the heightmap surface.</param>
            <param name="positionZ">The Z position of point on the heightmap surface.</param>
            <param name="normal">The normal vector of point on the heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateBounding">
            <summary>
            Updates bounding of the heightmap. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateBounding(System.Single,System.Single)">
            <summary>
            Updates bounding of the heightmap. 
            </summary>
            <param name="minHeight">The minimum value of height.</param>
            <param name="maxHeight">The maximum value of height.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateHeights(System.Single[],System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Updates the heightmap with array containing the heights of the new heightmap. 
            </summary>
            <param name="heights">The array containing the heights of the new heightmap.</param>
            <param name="sizeX">Size of the new heightmap on the X axis.</param>
            <param name="sizeZ">Size of the new heightmap on the Z axis.</param>
            <param name="dstPositionX">Destination position on the X axis of the new heightmap.</param>
            <param name="dstPositionY">Destination position on the Y axis of the new heightmap.</param>
            <param name="dstPositionZ">Destination position on the Z axis of the new heightmap.</param>
            <param name="updateNormals">Updates the normal vectors.</param>
            <param name="awakePhysicsObjects">Awakes physics objects.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateHeights(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the heightmap with array containing the heights of the new heightmap. 
            </summary>
            <param name="heights">The array containing the heights of the new heightmap.</param>
            <param name="sizeX">Size of the new heightmap on the X axis.</param>
            <param name="sizeZ">Size of the new heightmap on the Z axis.</param>
            <param name="dstPositionX">Destination position on the X axis of the new heightmap.</param>
            <param name="dstPositionZ">Destination position on the Z axis of the new heightmap.</param>
            <param name="updateNormals">Updates the normal vectors.</param>
            <param name="awakePhysicsObjects">Awakes physics objects.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateFrictions(System.Single[],System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Updates the heightmap with array containing the frictions of the new heightmap. 
            </summary>
            <param name="frictions">The array containing the frictions of the new heightmap.</param>
            <param name="sizeX">Size of the new heightmap on the X axis.</param>
            <param name="sizeZ">Size of the new heightmap on the Z axis.</param>
            <param name="dstPositionX">Destination position on the X axis of the new heightmap.</param>
            <param name="dstPositionY">Destination position on the Y axis of the new heightmap.</param>
            <param name="dstPositionZ">Destination position on the Z axis of the new heightmap.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateFrictions(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the heightmap with array containing the frictions of the new heightmap. 
            </summary>
            <param name="frictions">The array containing the frictions of the new heightmap.</param>
            <param name="sizeX">Size of the new heightmap on the X axis.</param>
            <param name="sizeZ">Size of the new heightmap on the Z axis.</param>
            <param name="dstPositionX">Destination position on the X axis of the new heightmap.</param>
            <param name="dstPositionZ">Destination position on the Z axis of the new heightmap.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateRestitutions(System.Single[],System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Updates the heightmap with array containing the restitutions of the new heightmap. 
            </summary>
            <param name="restitutions">The array containing the restitutions of the new heightmap.</param>
            <param name="sizeX">Size of the new heightmap on the X axis.</param>
            <param name="sizeZ">Size of the new heightmap on the Z axis.</param>
            <param name="dstPositionX">Destination position on the X axis of the new heightmap.</param>
            <param name="dstPositionY">Destination position on the Y axis of the new heightmap.</param>
            <param name="dstPositionZ">Destination position on the Z axis of the new heightmap.</param>
        </member>
        <member name="M:Komires.MataliPhysics.HeightmapController.UpdateRestitutions(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the heightmap with array containing the restitutions of the new heightmap. 
            </summary>
            <param name="restitutions">The array containing the restitutions of the new heightmap.</param>
            <param name="sizeX">Size of the new heightmap on the X axis.</param>
            <param name="sizeZ">Size of the new heightmap on the Z axis.</param>
            <param name="dstPositionX">Destination position on the X axis of the new heightmap.</param>
            <param name="dstPositionZ">Destination position on the Z axis of the new heightmap.</param>
        </member>
        <member name="P:Komires.MataliPhysics.HeightmapController.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.HeightmapController.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.HeightmapController.IsEnveloped">
            <summary>
            Returns whether the HeightmapController object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.HeightmapController.Enabled">
            <summary>
            Enables or disables the HeightmapController.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.CursorController">
            <summary>
            The CursorController object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetHitRay(Microsoft.Xna.Framework.Ray@)">
            <summary>
            Gets ray. 
            </summary>
            <param name="hitRay">Ray value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetHitPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the position of the hit. 
            </summary>
            <param name="hitPosition">The position of the hit.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetAnchor1(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the first anchor of the cursor. 
            </summary>
            <param name="anchor">The first anchor of the cursor.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetAnchor1(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the first anchor of the cursor. 
            </summary>
            <param name="anchor">The first anchor of the cursor.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetAnchor1(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the first anchor of the cursor. 
            </summary>
            <param name="anchor">The first anchor of the cursor.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetAnchor1(System.Single,System.Single,System.Single)">
            <summary>
            Sets the first anchor of the cursor. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetAnchor2(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the second anchor of the cursor. 
            </summary>
            <param name="anchor">The second anchor of the cursor.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetAnchor2(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the second anchor of the cursor. 
            </summary>
            <param name="anchor">The second anchor of the cursor.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetAnchor2(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the second anchor of the cursor. 
            </summary>
            <param name="anchor">The second anchor of the cursor.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetAnchor2(System.Single,System.Single,System.Single)">
            <summary>
            Sets the second anchor of the cursor. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetViewport(Microsoft.Xna.Framework.Graphics.Viewport@)">
            <summary>
            Gets the viewport. 
            </summary>
            <param name="viewport">Viewport of the screen.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetViewport(Microsoft.Xna.Framework.Graphics.Viewport@)">
            <summary>
            Sets the viewport. 
            </summary>
            <param name="viewport">Viewport of the screen.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetWorldMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the world matrix. 
            </summary>
            <param name="world">The world matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetWorldMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the world matrix. 
            </summary>
            <param name="world">The world matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetProjectionMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the projection matrix. 
            </summary>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetProjectionMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the projection matrix. 
            </summary>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetViewport(Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Sets the viewport. 
            </summary>
            <param name="viewport">Viewport of the screen.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.GetMousePosition(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets the mouse position. 
            </summary>
            <param name="mousePosition">Position of the mouse.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetMousePosition(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Sets the mouse position. 
            </summary>
            <param name="mousePosition">Position of the mouse.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetMousePosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the mouse position. 
            </summary>
            <param name="mousePosition">Position of the mouse.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.SetMousePosition(System.Single,System.Single)">
            <summary>
            Sets the mouse position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.CursorController.Update">
            <summary>
            Updates the controller. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.IsEnveloped">
            <summary>
            Returns whether the CursorController object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.Enabled">
            <summary>
            Enables or disables the CursorController. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.EnableRaycastingMode">
            <summary>
            Enables or disables the ray casting mode for the cursor. When the cursor is in this mode exclusively the physics object hit by the ray is being detected. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.MouseScrollWheel">
            <summary>
            Gets or sets value of the mouse scroll wheel. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.MouseButton">
            <summary>
            Gets or sets state of the mouse button. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.WindowActive">
            <summary>
            Gets or sets activity of the window. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.IsHitPhysicsObject">
            <summary>
            Returns whether the cursor encountered the object. Mouse button must be pushed when the cursor isn't in the ray casting mode.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.HitPhysicsObject">
            <summary>
            Gets the physics object hit by the ray. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.DragForce">
            <summary>
            Gets or sets force of the cursor dragging. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.DragWheelSpeed">
            <summary>
            Gets or sets speed of the cursor moving along the axis perpendicular to the screen. Default to 0.5.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.MaxDragWheel">
            <summary>
            Gets or sets maximum speed of the cursor moving along the axis perpendicular to the screen. Default to 600.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.EnableSpringMode">
            <summary>
            Enables or disables the spring mode for the cursor. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.EnableBreakRigidGroup">
            <summary>
            Enables or disables the breaking rigid groups by the cursor. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CursorController.IsDragging">
            <summary>
            Returns whether the cursor moves the physics object.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.LimitAngleMode">
            <summary>
            Modes of angle limits. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.EulerXYZ">
            <summary>
            Euler angle XYZ sequences.
            Values of the rotation angles about the X axis are from the range [-180, 180].
            Values of the rotation angles about the Y axis are from the range [-90, 90].
            Values of the rotation angles about the Z axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.EulerXZY">
            <summary>
            Euler angle XZY sequences.
            Values of the rotation angles about the X axis are from the range [-180, 180].
            Values of the rotation angles about the Z axis are from the range [-90, 90].
            Values of the rotation angles about the Y axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.EulerYXZ">
            <summary>
            Euler angle YXZ sequences.
            Values of the rotation angles about the Y axis are from the range [-180, 180].
            Values of the rotation angles about the X axis are from the range [-90, 90].
            Values of the rotation angles about the Z axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.EulerYZX">
            <summary>
            Euler angle YZX sequences.
            Values of the rotation angles about the Y axis are from the range [-180, 180].
            Values of the rotation angles about the Z axis are from the range [-90, 90].
            Values of the rotation angles about the X axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.EulerZXY">
            <summary>
            Euler angle ZXY sequences.
            Values of the rotation angles about the Z axis are from the range [-180, 180].
            Values of the rotation angles about the X axis are from the range [-90, 90].
            Values of the rotation angles about the Y axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.EulerZYX">
            <summary>
            Euler angle ZYX sequences.
            Values of the rotation angles about the Z axis are from the range [-180, 180].
            Values of the rotation angles about the Y axis are from the range [-90, 90].
            Values of the rotation angles about the X axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.LimitAngleMode.Quaternion">
            <summary>
            Quaternion axis coordinates and angle sequences.
            Values of the angles for the X axis are from the range [-180, 180].
            Values of the angles for the Y axis are from the range [-180, 180].
            Values of the angles for the Z axis are from the range [-180, 180].
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Constraint">
            <summary>
            The Constraint object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.GetAnchor1(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the first anchor of the constraint. 
            </summary>
            <param name="anchor">The first anchor of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetAnchor1(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the first anchor of the constraint. 
            </summary>
            <param name="anchor">The first anchor of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetAnchor1(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the first anchor of the constraint. 
            </summary>
            <param name="anchor">The first anchor of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetAnchor1(System.Single,System.Single,System.Single)">
            <summary>
            Sets the first anchor of the constraint. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.GetAnchor2(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the second anchor of the constraint. 
            </summary>
            <param name="anchor">The second anchor of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetAnchor2(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the second anchor of the constraint. 
            </summary>
            <param name="anchor">The second anchor of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetAnchor2(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the second anchor of the constraint. 
            </summary>
            <param name="anchor">The second anchor of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetAnchor2(System.Single,System.Single,System.Single)">
            <summary>
            Sets the second anchor of the constraint. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.GetInitWorldOrientation1(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Gets the initial orientation of the first physics object of the constraint. 
            </summary>
            <param name="initWorldOrientation">The initial orientation of the first physics object of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetInitWorldOrientation1(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Sets the initial orientation of the first physics object of the constraint. 
            </summary>
            <param name="initWorldOrientation">The initial orientation of the first physics object of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetInitWorldOrientation1(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Sets the initial orientation of the first physics object of the constraint. 
            </summary>
            <param name="initWorldOrientation">The initial orientation of the first physics object of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetInitWorldOrientation1(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the initial orientation of the first physics object of the constraint. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.GetInitWorldOrientation2(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Gets the initial orientation of the second physics object of the constraint. 
            </summary>
            <param name="initWorldOrientation">The initial orientation of the second physics object of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetInitWorldOrientation2(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Sets the initial orientation of the second physics object of the constraint. 
            </summary>
            <param name="initWorldOrientation">The initial orientation of the second physics object of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetInitWorldOrientation2(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Sets the initial orientation of the second physics object of the constraint. 
            </summary>
            <param name="initWorldOrientation">The initial orientation of the second physics object of the constraint.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.SetInitWorldOrientation2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the initial orientation of the second physics object of the constraint. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Constraint.Update">
            <summary>
            Updates the constraint.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.IsEnveloped">
            <summary>
            Returns whether the Constraint object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.Name">
            <summary>
            Gets or sets name of the constraint.
            Name must be unique in the ConstraintManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.Index">
            <summary>
            Gets the index of constraint in the ConstraintManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.Force">
            <summary>
            Gets or sets force of the constraint. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.Distance">
            <summary>
            Gets or sets distance of the constraint. Positive values cause calculating the maximum distance. Negative values cause calculating the fixed distance. The zero disables calculating the distance. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLinearVelocity">
            <summary>
            Gets or sets maximum linear velocity of the constraint. Default to 20000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinResponseLinearVelocity">
            <summary>
            Gets or sets minimum response linear velocity for the constraint.
            Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinResponseAngularVelocity">
            <summary>
            Gets or sets minimum response angular velocity for the constraint.
            Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.LinearDamping">
            <summary>
            Gets or sets linear damping of the constraint from the range 0 - 1. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableCollisions">
            <summary>
            Enables or disables the collision between physics objects of the constraint. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableSpringMode">
            <summary>
            Enables or disables the spring mode for the constraint. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableBreak">
            <summary>
            Enables or disables the breaking of the constraint. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableBreakRigidGroup">
            <summary>
            Enables or disables the breaking rigid groups by the constraint. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.IsBroken">
            <summary>
            Returns whether the constraint is broken.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.IsBrokenRigidGroup">
            <summary>
            Returns whether physics objects of the constraint creating rigid groups undergone the disintegration caused by the constraint. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinBreakVelocity">
            <summary>
            Gets or sets the minimum velocity of breaking the constraint. Default to 100.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.PhysicsObject1">
            <summary>
            Gets or sets the first physics object of the constraint. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.PhysicsObject2">
            <summary>
            Gets or sets the second physics object of the constraint. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableWorldLimitDistance">
            <summary>
            Enables or disables calculating the distance limits in world space. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitDistanceX">
            <summary>
            Gets or sets the minimum limit of the distance along the X axis. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitDistanceX">
            <summary>
            Gets or sets the maximum limit of the distance along the X axis. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitDistanceY">
            <summary>
            Gets or sets the minimum limit of the distance along the Y axis. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitDistanceY">
            <summary>
            Gets or sets the maximum limit of the distance along the Y axis. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitDistanceZ">
            <summary>
            Gets or sets the minimum limit of the distance along the Z axis. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitDistanceZ">
            <summary>
            Gets or sets the maximum limit of the distance along the Z axis. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlDistanceX">
            <summary>
            Enables or disables the control of the distance along X axis. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlDistanceY">
            <summary>
            Enables or disables the control of the distance along Y axis. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlDistanceZ">
            <summary>
            Enables or disables the control of the distance along Z axis. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlDistanceX">
            <summary>
            Gets or sets the distance along the X axis.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlDistanceY">
            <summary>
            Gets or sets the distance along the Y axis.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlDistanceZ">
            <summary>
            Gets or sets the distance along the Z axis.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableLimitAngleSpringMode">
            <summary>
            Enables or disables the spring mode for angle limits. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.LimitAngleForce">
            <summary>
            Gets or sets force for the angle limits of the constraint. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableLimitAngleX">
            <summary>
            Enables or disables the angle limits about the X axis.
            Minimum and maximum limits are by default set to 0 causing the blockade of rotations about the X axis after enabling. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableLimitAngleY">
            <summary>
            Enables or disables the angle limits about the Y axis.
            Minimum and maximum limits are by default set to 0 causing the blockade of rotations about the Y axis after enabling. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableLimitAngleZ">
            <summary>
            Enables or disables the angle limits about the Z axis.
            Minimum and maximum limits are by default set to 0 causing the blockade of rotations about the Z axis after enabling. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxAngularVelocity">
            <summary>
            Gets or sets maximum angular velocity of the constraint. Default to 20000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.AngularDamping">
            <summary>
            Gets or sets angular damping of the constraint from the range 0 - 1. Default to 0.0005.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.LimitAngleMode">
            <summary>
            Gets or sets modes of angle limits. Default to Quaternion.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitRadAngleX">
            <summary>
            Gets or sets the minimum limit of the rotation angles about the X axis in radians for the Euler modes. 
            Gets or sets the minimum limit of the axis X coordinates and angle of the quaternion in radians for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitRadAngleX">
            <summary>
            Gets or sets the maximum limit of the rotation angles about the X axis in radians for the Euler modes. 
            Gets or sets the maximum limit of the axis X coordinates and angle of the quaternion in radians for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitRadAngleY">
            <summary>
            Gets or sets the minimum limit of the rotation angles about the Y axis in radians for the Euler modes. 
            Gets or sets the minimum limit of the axis Y coordinates and angle of the quaternion in radians for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitRadAngleY">
            <summary>
            Gets or sets the maximum limit of the rotation angles about the Y axis in radians for the Euler modes. 
            Gets or sets the maximum limit of the axis Y coordinates and angle of the quaternion in radians for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitRadAngleZ">
            <summary>
            Gets or sets the minimum limit of the rotation angles about the Z axis in radians for the Euler modes. 
            Gets or sets the minimum limit of the axis Z coordinates and angle of the quaternion in radians for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitRadAngleZ">
            <summary>
            Gets or sets the maximum limit of the rotation angles about the Z axis in radians for the Euler modes. 
            Gets or sets the maximum limit of the axis Z coordinates and angle of the quaternion in radians for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitDegAngleX">
            <summary>
            Gets or sets the minimum limit of the rotation angles about the X axis in degrees for the Euler modes. 
            Gets or sets the minimum limit of the axis X coordinates and angle of the quaternion in degrees for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitDegAngleX">
            <summary>
            Gets or sets the maximum limit of the rotation angles about the X axis in degrees for the Euler modes. 
            Gets or sets the maximum limit of the axis X coordinates and angle of the quaternion in degrees for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitDegAngleY">
            <summary>
            Gets or sets the minimum limit of the rotation angles about the Y axis in degrees for the Euler modes. 
            Gets or sets the minimum limit of the axis Y coordinates and angle of the quaternion in degrees for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitDegAngleY">
            <summary>
            Gets or sets the maximum limit of the rotation angles about the Y axis in degrees for the Euler modes. 
            Gets or sets the maximum limit of the axis Y coordinates and angle of the quaternion in degrees for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinLimitDegAngleZ">
            <summary>
            Gets or sets the minimum limit of the rotation angles about the Z axis in degrees for the Euler modes. 
            Gets or sets the minimum limit of the axis Z coordinates and angle of the quaternion in degrees for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MaxLimitDegAngleZ">
            <summary>
            Gets or sets the maximum limit of the rotation angles about the Z axis in degrees for the Euler modes. 
            Gets or sets the maximum limit of the axis Z coordinates and angle of the quaternion in degrees for the Quaternion mode. 
            Mode of angle limits determines the LimitAngleMode property. Default to 0.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlAngleX">
            <summary>
            Enables or disables the control of the X angle. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlAngleY">
            <summary>
            Enables or disables the control of the Y angle. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlAngleZ">
            <summary>
            Enables or disables the control of the Z angle. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlRadAngleX">
            <summary>
            Gets or sets the X angle in radians.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlRadAngleY">
            <summary>
            Gets or sets the Y angle in radians.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlRadAngleZ">
            <summary>
            Gets or sets the Z angle in radians.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlDegAngleX">
            <summary>
            Gets or sets the X angle in degrees.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlDegAngleY">
            <summary>
            Gets or sets the Y angle in degrees.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.ControlDegAngleZ">
            <summary>
            Gets or sets the Z angle in degrees.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlDistanceWithDeformation">
            <summary>
            Enables or disables the control of the distance with deformation. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinDistanceDeformationVelocity">
            <summary>
            Gets or sets the minimum velocity of the distance deformation. 
            When the distance control is enabled above this velocity a deformation follows.
            When the distance control is disabled exclusively a flag IsDistanceBeingDeformed is being set.  
            Default to 20000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.IsDistanceBeingDeformed">
            <summary>
            Returns whether the distance is being deformed.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.EnableControlAngleWithDeformation">
            <summary>
            Enables or disables the control of the angle with deformation. Default to false.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.MinAngleDeformationVelocity">
            <summary>
            Gets or sets the minimum velocity of the angle deformation. 
            When the angle control is enabled above this velocity a deformation follows.
            When the angle control is disabled exclusively a flag IsAngleBeingDeformed is being set.  
            Default to 20000.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Constraint.IsAngleBeingDeformed">
            <summary>
            Returns whether the angle is being deformed.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleMeshController">
            <summary>
            The TriangleMeshController object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshController.AddTriangle(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,System.Single)">
            <summary>
            Adds the triangle to the triangle mesh.
            </summary>
            <param name="point1">Point of the triangle.</param>
            <param name="point2">Point of the triangle.</param>
            <param name="point3">Point of the triangle.</param>
            <param name="friction">Friction of triangle.</param>
            <param name="restitution">Restitution of triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshController.AddTriangle(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            Adds the triangle to the triangle mesh.
            </summary>
            <param name="point1">Point of the triangle.</param>
            <param name="point2">Point of the triangle.</param>
            <param name="point3">Point of the triangle.</param>
            <param name="friction">Friction of triangle.</param>
            <param name="restitution">Restitution of triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleMeshController.AddTriangle(Komires.MataliPhysics.Triangle,System.Single,System.Single)">
            <summary>
            Adds the triangle to the triangle mesh.
            </summary>
            <param name="triangle">Triangle.</param>
            <param name="friction">Friction of triangle.</param>
            <param name="restitution">Restitution of triangle.</param>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshController.IsEnveloped">
            <summary>
            Returns whether the TriangleMeshController object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleMeshController.Enabled">
            <summary>
            Enables or disables the TriangleMeshController.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ShapePrimitiveManager">
            <summary>
            The ShapePrimitiveManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Get(System.Int32)">
            <summary>
            Gets the primitive shape with the specified index. 
            </summary>
            <param name="index">Index of the primitive shape in the ShapePrimitiveManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Create(System.String)">
            <summary>
            Creates the primitive shape with the specified name. 
            Name must be unique in the ShapePrimitiveManager.
            </summary>
            <param name="name">Name of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Contains(System.String)">
            <summary>
            Determines whether the primitive shape is in the ShapePrimitiveManager. 
            </summary>
            <param name="name">Name of the primitive shape to locate in the ShapePrimitiveManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Contains(Komires.MataliPhysics.ShapePrimitive)">
            <summary>
            Determines whether the primitive shape is in the ShapePrimitiveManager. 
            </summary>
            <param name="shapePrimitive">Primitive shape to locate in the ShapePrimitiveManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Find(System.String)">
            <summary>
            Searches for the primitive shape in the ShapePrimitiveManager. 
            </summary>
            <param name="name">Name of the primitive shape to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Find(System.Int32)">
            <summary>
            Searches for the primitive shape in the ShapePrimitiveManager. 
            </summary>
            <param name="index">Index of the primitive shape to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Remove(System.String)">
            <summary>
            Removes the primitive shape from the ShapePrimitiveManager. 
            </summary>
            <param name="name">Name of the primitive shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Remove(System.Int32)">
            <summary>
            Removes the primitive shape from the ShapePrimitiveManager. 
            </summary>
            <param name="index">Index of the primitive shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.Remove(Komires.MataliPhysics.ShapePrimitive)">
            <summary>
            Removes the primitive shape from the ShapePrimitiveManager. 
            </summary>
            <param name="shapePrimitive">Primitive shape to remove from the ShapePrimitiveManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitiveManager.RemoveAll">
            <summary>
            Removes all primitive shapes from the ShapePrimitiveManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitiveManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitiveManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitiveManager.IsEnveloped">
            <summary>
            Returns whether the ShapePrimitiveManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitiveManager.Count">
            <summary>
            Gets the number of primitive shapes managed by the ShapePrimitiveManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Projection">
            <summary>
            The Projection object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.GetProjectionMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the projection matrix. 
            </summary>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.SetProjectionMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the projection matrix. 
            The projection matrix in right-handed coordinate system conventions requires the change of the sign of the Z axis by the ChangeAxisZ method for the correct update of the frustum.
            </summary>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.GetPerspectiveLH(System.Single,System.Single,System.Single,System.Int32,System.Int32,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns the projection matrix in left-handed coordinate system conventions. 
            </summary>
            <param name="nearPlane">Distance to the near cutting plane.</param>
            <param name="farPlane">Distance to the far cutting plane.</param>
            <param name="fieldOfView">Field of view in degrees.</param>
            <param name="width">Screen width.</param>
            <param name="height">Screen height.</param>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.GetPerspectiveRH(System.Single,System.Single,System.Single,System.Int32,System.Int32,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns the projection matrix in right-handed coordinate system conventions. 
            </summary>
            <param name="nearPlane">Distance to the near cutting plane.</param>
            <param name="farPlane">Distance to the far cutting plane.</param>
            <param name="fieldOfView">Field of view in degrees.</param>
            <param name="width">Screen width.</param>
            <param name="height">Screen height.</param>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.CreatePerspectiveLH(System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Creates the projection matrix in left-handed coordinate system conventions. 
            </summary>
            <param name="nearPlane">Distance to the near cutting plane.</param>
            <param name="farPlane">Distance to the far cutting plane.</param>
            <param name="fieldOfView">Field of view in degrees.</param>
            <param name="width">Screen width.</param>
            <param name="height">Screen height.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.CreatePerspectiveRH(System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Creates the projection matrix in right-handed coordinate system conventions. 
            </summary>
            <param name="nearPlane">Distance to the near cutting plane.</param>
            <param name="farPlane">Distance to the far cutting plane.</param>
            <param name="fieldOfView">Field of view in degrees.</param>
            <param name="width">Screen width.</param>
            <param name="height">Screen height.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Projection.ChangeAxisZ(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Changes the sign of Z axis of projection matrix in right-handed coordinate system conventions for the correct update of the frustum.
            </summary>
            <param name="projection">The projection matrix.</param>
            <param name="flipProjection">The projection matrix to change of the sign of Z axis.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Projection.IsEnveloped">
            <summary>
            Returns whether the Projection object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Projection.NearPlane">
            <summary>
            Gets or sets distance to the near cutting plane.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Projection.FarPlane">
            <summary>
            Gets or sets distance to the far cutting plane.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Projection.FieldOfView">
            <summary>
            Gets or sets field of view in degrees.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Projection.Width">
            <summary>
            Gets or sets screen width.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Projection.Height">
            <summary>
            Gets or sets screen height.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsScene">
            <summary>
            The PhysicsScene object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.CreateLight(System.Boolean)">
            <summary>
            Creates the PhysicsLight object. 
            </summary>
            <param name="enabled">Enables or disables the light.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.GetGravityDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the gravity direction for the all scene objects. Default to x = 0, y = -1, z = 0.
            </summary>
            <param name="gravityDirection">The gravity direction for the all scene objects.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.SetGravityDirection(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the gravity direction for the all scene objects. Default to x = 0, y = -1, z = 0.
            </summary>
            <param name="gravityDirection">The gravity direction for the all scene objects.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.IsSimulateSynchronized(System.Double)">
            <summary>
            Returns true when the simulation process synchronized to SynchronizationTimeOfSimulation. 
            </summary>
            <param name="time">Time value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.SimulateWithSynchronization(System.Double)">
            <summary>
            Allows to run updating the scene, controllers, collisions. 
            The simulation process is synchronized to SynchronizationTimeOfSimulation. 
            The simulation time step is TimeOfSimulation.
            </summary>
            <param name="time">Time value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.Simulate(System.Double)">
            <summary>
            Allows to run updating the scene, controllers, collisions. 
            The simulation process isn't synchronized to SynchronizationTimeOfSimulation. 
            The simulation time step is TimeOfSimulation.
            </summary>
            <param name="time">Time value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.IsDrawSynchronized(System.Double)">
            <summary>
            Returns true when the draw process synchronized to SynchronizationTimeOfDraw. 
            </summary>
            <param name="time">Time value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.DrawWithSynchronization(System.Double)">
            <summary>
            Allows to run updating the draw controllers. 
            The draw process is synchronized to SynchronizationTimeOfDraw.
            The draw time step is TimeOfDraw.
            </summary>
            <param name="time">Time value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.Draw(System.Double)">
            <summary>
            Allows to run updating the draw controllers. 
            The draw process isn't synchronized to SynchronizationTimeOfDraw.
            The draw time step is TimeOfDraw.
            </summary>
            <param name="time">Time value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdateFromInitLocalTransform(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Updates the specified physics object in the scene. 
            The MainWorldTransform is calculated from the InitLocalTransform.
            </summary>
            <param name="physicsObject">Physics object from the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdateFromMainLocalTransform(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Updates the specified physics object in the scene. 
            The MainWorldTransform is calculated from the MainLocalTransform.
            </summary>
            <param name="physicsObject">Physics object from the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdateMainTransform(Komires.MataliPhysics.PhysicsObject)">
            <summary>
            Updates the specified physics object in the scene. 
            The MainWorldTransform and MainLocalTransform are calculated when it is necessary.
            </summary>
            <param name="physicsObject">Physics object from the PhysicsObjectManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.GetPhysicsObjectsWithCamera(System.Int32)">
            <summary>
            Gets the physics object with the enabled Camera at the specified position.
            </summary>
            <param name="position">Position from the range 0 - PhysicsObjectsWithCameraCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.GetPhysicsObjectsWithActiveCamera(System.Int32)">
            <summary>
            Gets the physics object with the enabled and active Camera at the specified position.
            </summary>
            <param name="position">Position from the range 0 - PhysicsObjectsWithActiveCameraCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.GetIntersectedPhysicsObject(System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the physics object intersected by the ray, segment, box or sphere at the specified position after the update with methods UpdatePhysicsObjectsIntersectedByRay, UpdatePhysicsObjectsIntersectedBySegment, UpdatePhysicsObjectsIntersectedByBox or UpdatePhysicsObjectsIntersectedBySphere.
            </summary>
            <param name="position">Position from the range 0 - IntersectedPhysicsObjectsCount.</param>
            <param name="hitPosition">Position of the intersection.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdatePhysicsObjectsIntersectedByRay(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,System.Boolean)">
            <summary>
            Updates the list of physics objects intersected by the ray and sets the counter IntersectedPhysicsObjectsCount.
            </summary>
            <param name="position">Ray position.</param>
            <param name="direction">Ray direction.</param>
            <param name="margin">Margin of the ray.</param>
            <param name="testBounding">Flag of testing the bounding box.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdatePhysicsObjectsIntersectedBySegment(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,System.Boolean)">
            <summary>
            Updates the list of physics objects intersected by the segment and sets the counter IntersectedPhysicsObjectsCount.
            </summary>
            <param name="startPosition">Start of the segment.</param>
            <param name="endPosition">End of the segment.</param>
            <param name="margin">Margin of the segment.</param>
            <param name="testBounding">Flag of testing the bounding box.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdatePhysicsObjectsIntersectedByBox(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Updates the list of physics objects intersected by the box and sets the counter IntersectedPhysicsObjectsCount.
            </summary>
            <param name="min">Minimum vertex of the box.</param>
            <param name="max">Maximum vertex of the box.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.UpdatePhysicsObjectsIntersectedBySphere(Microsoft.Xna.Framework.Vector3@,System.Single)">
            <summary>
            Updates the list of physics objects intersected by the sphere and sets the counter IntersectedPhysicsObjectsCount.
            </summary>
            <param name="center">Center of the sphere.</param>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.RemovePhysicsObject(Komires.MataliPhysics.PhysicsObject,System.Boolean,System.Boolean)">
            <summary>
            Removes physics object from the scene. If the physics object has a flag of the rigid group equal true, all physics objects building the rigid group will be removed.
            </summary>
            <param name="physicsObject">Physics object to remove from the scene.</param>
            <param name="removePhysicsObjectsFromManager">Flag of removing physics objects from physics objects manager.</param>
            <param name="removeConstraintsFromManager">Flag of removing constraints from the constraint manager for physics objects.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsScene.RemoveConstraint(Komires.MataliPhysics.Constraint,System.Boolean)">
            <summary>
            Removes constraint from the scene.
            </summary>
            <param name="constraint">Constraint to remove from the scene.</param>
            <param name="removeConstraintFromManager">Flag of removing constraint from the constraint manager.</param>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.Factory">
            <summary>
            Gets the PhysicsSceneFactory object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.UserControllers">
            <summary>
            Gets the UserControllers object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.Light">
            <summary>
            Gets the PhysicsLight object created by the CreateLight method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.Sound">
            <summary>
            Gets the PhysicsSound object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.IsEnveloped">
            <summary>
            Returns whether the PhysicsScene object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.Name">
            <summary>
            Gets or sets name of the scene.
            Name must be unique in the PhysicsSceneManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.Index">
            <summary>
            Gets the index of scene in the PhysicsSceneManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.SimulationFPS">
            <summary>
            Gets the number of frames of the simulation per second.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.SimulationFrameCount">
            <summary>
            Gets the number of frames of the simulation.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.SynchronizationTimeOfSimulation">
            <summary>
            Gets or sets the synchronization time of the simulation. Default to 1/60.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.TimeOfSimulation">
            <summary>
            Gets or sets the time of the simulation. Default to 1/15. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.DrawFPS">
            <summary>
            Gets the number of frames of the draw per second.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.DrawFrameCount">
            <summary>
            Gets the number of frames of the draw.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.SynchronizationTimeOfDraw">
            <summary>
            Gets or sets the synchronization time of draw. Default to 1/60.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.TimeOfDraw">
            <summary>
            Gets or sets the time of draw. Default to 1/60.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.LinearDamping">
            <summary>
            Gets or sets the linear damping for the all scene objects. Default to 0.005.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.AngularDamping">
            <summary>
            Gets or sets the angular damping for the all scene objects. Default to 0.005.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.GravityAcceleration">
            <summary>
            Gets or sets the gravity acceleration for the all scene objects. Default to 9.81.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.MaxIterationCount">
            <summary>
            Gets or sets the maximum number of solver iterations. Default to 10.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.PhysicsObjectsWithCameraCount">
            <summary>
            Gets the number of physics objects with enabled Camera.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.PhysicsObjectsWithActiveCameraCount">
            <summary>
            Gets the number of physics objects with enabled and active Camera.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.IntersectedPhysicsObjectsCount">
            <summary>
            Gets the number of physics objects intersected by the ray or segment. This number is updated by the UpdatePhysicsObjectsIntersectedByRay, UpdatePhysicsObjectsIntersectedBySegment, UpdatePhysicsObjectsIntersectedByBox or UpdatePhysicsObjectsIntersectedBySphere methods.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.TotalPhysicsObjectCount">
            <summary>
            Gets the number of all physics objects.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.TotalConstraintCount">
            <summary>
            Gets the number of all constraints.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsScene.TotalContactPointCount">
            <summary>
            Gets the number of all contact points.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Integral">
            <summary>
            The Integral object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.GetLocalInertia(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the local inertia tensor of the physics object. Default to identity.
            </summary>
            <param name="localInertia">The local inertia tensor of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.GetWorldInertia(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the world inertia tensor of the physics object. Default to identity.
            </summary>
            <param name="worldInertia">The world inertia tensor of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.GetInvLocalInertia(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the inverse local inertia tensor of the physics object. Default to identity.
            </summary>
            <param name="invLocalInertia">The inverse local inertia tensor of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.GetInvWorldInertia(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the inverse world inertia tensor of the physics object. Default to identity.
            </summary>
            <param name="invWorldInertia">The inverse world inertia tensor of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetDensity(System.Single)">
            <summary>
            Sets the density of the physics object.
            The density not equal of the infinity for the mass equal of the infinity causes calculating the correct mass during the update.
            The density equal of the infinity for the mass not equal of the infinity causes calculating the correct density during the update.
            Default to infinity.
            </summary>
            <param name="density">Density of the physics object to set.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetMass(System.Single)">
            <summary>
            Sets the mass of the physics object.
            The mass not equal of the infinity for the density equal of the infinity causes calculating the correct density during the update.
            The mass equal of the infinity for the density not equal of the infinity causes calculating the correct mass during the update.
            The mass equal of the 0 sets the default value.
            Default to infinity.
            </summary>
            <param name="mass">Mass of the physics object to set.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetInertia(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the inertia tensors of the physics object.
            The local inertia tensor equal of the identity causes calculating the inertia tensors during the update.
            Default to identity.
            </summary>
            <param name="localInertia">The local inertia tensor of the physics object to set.</param>
            <param name="worldRotation">The world rotation matrix of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetInertia(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the inertia tensors of the physics object.
            The local inertia tensor equal of the identity causes calculating the inertia tensors during the update.
            Default to identity.
            </summary>
            <param name="localInertia">The local inertia tensor of the physics object to set.</param>
            <param name="worldRotation">The world rotation matrix of the physics object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetToDefault">
            <summary>
            Restores the default values. 
            Sets density to infinity. 
            Sets mass to infinity. 
            Sets inertia tensors to identity.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetToDefaultMass">
            <summary>
            Restores the default values of mass. 
            Sets density to infinity. 
            Sets mass to infinity. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Integral.SetToDefaultInertia">
            <summary>
            Restores the default values of inertia tensors. 
            Sets inertia tensors to identity.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.IsEnveloped">
            <summary>
            Returns whether the Integral object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.IsStatic">
            <summary>
            Returns whether the Integral object is static. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.Density">
            <summary>
            Gets the density of the physics object. Default to infinity. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.Mass">
            <summary>
            Gets the mass of the physics object. Default to infinity. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.InvMass">
            <summary>
            Gets the inverse mass of the physics object. Default to 0. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.InertiaScaleFactor">
            <summary>
            Gets or sets the inertia tensor scale factor of the physics object. Default to 1.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.EnableInertia">
            <summary>
            Enables or disables calculating the inertia tensors during the update. Default to true.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Integral.EnableUpdateMassCenterForRigidGroupWithAndWithoutInertia">
            <summary>
            Enables or disables the update of center of the mass for rigid group built from physics objects with and without inertia tensors. Default to false.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ScreenToRayController">
            <summary>
            The ScreenToRayController object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetHitRay(Microsoft.Xna.Framework.Ray@)">
            <summary>
            Gets ray. 
            </summary>
            <param name="hitRay">Ray value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetHitPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the position of the hit. 
            </summary>
            <param name="hitPosition">The position of the hit.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetViewport(Microsoft.Xna.Framework.Graphics.Viewport@)">
            <summary>
            Gets the viewport. 
            </summary>
            <param name="viewport">Viewport of the screen.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetViewport(Microsoft.Xna.Framework.Graphics.Viewport@)">
            <summary>
            Sets the viewport. 
            </summary>
            <param name="viewport">Viewport of the screen.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetViewport(Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Sets the viewport. 
            </summary>
            <param name="viewport">Viewport of the screen.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetViewMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the view matrix. 
            </summary>
            <param name="view">The view matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetWorldMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the world matrix. 
            </summary>
            <param name="world">The world matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetWorldMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the world matrix. 
            </summary>
            <param name="world">The world matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetProjectionMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the projection matrix. 
            </summary>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetProjectionMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the projection matrix. 
            </summary>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.GetScreenPosition(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets the position of point in the screen space. 
            </summary>
            <param name="screenPosition">Position of point in screen space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetScreenPosition(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Sets the mouse position. 
            </summary>
            <param name="screenPosition">Position of point in screen space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetScreenPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the mouse position. 
            </summary>
            <param name="screenPosition">Position of point in screen space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.SetScreenPosition(System.Single,System.Single)">
            <summary>
            Sets the mouse position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ScreenToRayController.Update">
            <summary>
            Updates the controller. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.IsEnveloped">
            <summary>
            Returns whether the ScreenToRayController object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.Enabled">
            <summary>
            Enables or disables the ScreenToRayController.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.MouseButton">
            <summary>
            Gets or sets state of the mouse button. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.IsHitPhysicsObject">
            <summary>
            Returns whether the ray encountered the object.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ScreenToRayController.HitPhysicsObject">
            <summary>
            Gets the physics object hit by the ray. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ShapePrimitiveType">
            <summary>
            Types of the primitive shapes. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Point">
            <summary>
            Point.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Edge">
            <summary>
            Edge.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Triangle">
            <summary>
            Triangle.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Tetrahedron">
            <summary>
            Tetrahedron.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Box">
            <summary>
            Box.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.CylinderX">
            <summary>
            Cylinder whose central axis is aligned with the X axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.CylinderY">
            <summary>
            Cylinder whose central axis is aligned with the Y axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.CylinderZ">
            <summary>
            Cylinder whose central axis is aligned with the Z axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Cylinder2RX">
            <summary>
            Cylinder with two radii whose central axis is aligned with the X axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Cylinder2RY">
            <summary>
            Cylinder with two radii whose central axis is aligned with the Y axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Cylinder2RZ">
            <summary>
            Cylinder with two radii whose central axis is aligned with the Z axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Sphere">
            <summary>
            Sphere.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.HemisphereX">
            <summary>
            Hemisphere whose central axis is aligned with the X axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.HemisphereY">
            <summary>
            Hemisphere whose central axis is aligned with the Y axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.HemisphereZ">
            <summary>
            Hemisphere whose central axis is aligned with the Z axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.CapsuleX">
            <summary>
            Capsule whose central axis is aligned with the X axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.CapsuleY">
            <summary>
            Capsule whose central axis is aligned with the Y axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.CapsuleZ">
            <summary>
            Capsule whose central axis is aligned with the Z axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.ConeX">
            <summary>
            Cone whose central axis is aligned with the X axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.ConeY">
            <summary>
            Cone whose central axis is aligned with the Y axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.ConeZ">
            <summary>
            Cone whose central axis is aligned with the Z axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.PlaneX">
            <summary>
            Plane perpendicular to the X axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.PlaneY">
            <summary>
            Plane perpendicular to the Y axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.PlaneZ">
            <summary>
            Plane perpendicular to the Z axis.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Convex">
            <summary>
            Convex.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.ConvexHull">
            <summary>
            Convex hull.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.TriangleMesh">
            <summary>
            Triangle mesh.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Heightmap">
            <summary>
            Heightmap.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapePrimitiveType.Fluid">
            <summary>
            Fluid.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ShapePrimitive">
            <summary>
            The ShapePrimitive object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.GetCenterTranslation(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the translation of geometrical center of the primitive shape. Describes how far the geometrical center of the primitive shape was moved. Usually 0.
            </summary>
            <param name="centerTranslation">The translation of geometrical center of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.GetConvexPoint(System.Int32,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the point of the convex primitive shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ConvexPointCount.</param>
            <param name="convexPoint">The point of the convex primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreatePoint(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates the point.
            </summary>
            <param name="point">Point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreatePoint(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates the point.
            </summary>
            <param name="point">Point.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreatePoint(System.Single,System.Single,System.Single)">
            <summary>
            Creates the point.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateEdge(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates the edge.
            </summary>
            <param name="point1">Point of the edge.</param>
            <param name="point2">Point of the edge.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateEdge(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates the edge.
            </summary>
            <param name="point1">Point of the edge.</param>
            <param name="point2">Point of the edge.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangle(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates the triangle.
            </summary>
            <param name="point1">Point of the triangle.</param>
            <param name="point2">Point of the triangle.</param>
            <param name="point3">Point of the triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangle(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates the triangle.
            </summary>
            <param name="point1">Point of the triangle.</param>
            <param name="point2">Point of the triangle.</param>
            <param name="point3">Point of the triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangle(Komires.MataliPhysics.Triangle)">
            <summary>
            Creates the triangle.
            </summary>
            <param name="triangle">Triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTetrahedron(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates the tetrahedron.
            </summary>
            <param name="point1">Point of the tetrahedron.</param>
            <param name="point2">Point of the tetrahedron.</param>
            <param name="point3">Point of the tetrahedron.</param>
            <param name="point4">Point of the tetrahedron.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTetrahedron(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates the tetrahedron.
            </summary>
            <param name="point1">Point of the tetrahedron.</param>
            <param name="point2">Point of the tetrahedron.</param>
            <param name="point3">Point of the tetrahedron.</param>
            <param name="point4">Point of the tetrahedron.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateBox(System.Single)">
            <summary>
            Creates the cuboid.
            </summary>
            <param name="halfEdge">Half of the edge lenght of the cube.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateBox(System.Single,System.Single,System.Single)">
            <summary>
            Creates the cuboid.
            </summary>
            <param name="halfWidth">Half of the width of the cuboid.</param>
            <param name="halfHeight">Half of the heigth of the cuboid.</param>
            <param name="halfLength">Half of the length of the cuboid.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCylinderX(System.Single,System.Single)">
            <summary>
            Creates the cylinder whose central axis is aligned with the X axis.
            </summary>
            <param name="length">Length of the cylinder.</param>
            <param name="radius">Radius of the cylinder.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCylinderY(System.Single,System.Single)">
            <summary>
            Creates the cylinder whose central axis is aligned with the Y axis.
            </summary>
            <param name="length">Length of the cylinder.</param>
            <param name="radius">Radius of the cylinder.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCylinderZ(System.Single,System.Single)">
            <summary>
            Creates the cylinder whose central axis is aligned with the Z axis.
            </summary>
            <param name="length">Length of the cylinder.</param>
            <param name="radius">Radius of the cylinder.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCylinder2RX(System.Single,System.Single,System.Single)">
            <summary>
            Creates the cylinder with two radii whose central axis is aligned with the X axis.
            </summary>
            <param name="length">Length of the cylinder.</param>
            <param name="radius1">First radius of the cylinder.</param>
            <param name="radius2">Second radius of the cylinder.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCylinder2RY(System.Single,System.Single,System.Single)">
            <summary>
            Creates the cylinder with two radii whose central axis is aligned with the Y axis.
            </summary>
            <param name="length">Length of the cylinder.</param>
            <param name="radius1">First radius of the cylinder.</param>
            <param name="radius2">Second radius of the cylinder.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCylinder2RZ(System.Single,System.Single,System.Single)">
            <summary>
            Creates the cylinder with two radii whose central axis is aligned with the Z axis.
            </summary>
            <param name="length">Length of the cylinder.</param>
            <param name="radius1">First radius of the cylinder.</param>
            <param name="radius2">Second radius of the cylinder.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateSphere(System.Single)">
            <summary>
            Creates the sphere.
            </summary>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateHemisphereX(System.Single)">
            <summary>
            Creates the hemisphere whose central axis is aligned with the X axis.
            </summary>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateHemisphereY(System.Single)">
            <summary>
            Creates the hemisphere whose central axis is aligned with the Y axis.
            </summary>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateHemisphereZ(System.Single)">
            <summary>
            Creates the hemisphere whose central axis is aligned with the Z axis.
            </summary>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCapsuleX(System.Single,System.Single)">
            <summary>
            Creates the capsule whose central axis is aligned with the X axis.
            </summary>
            <param name="length">Length of the capsule.</param>
            <param name="radius">Radius of the capsule.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCapsuleY(System.Single,System.Single)">
            <summary>
            Creates the capsule whose central axis is aligned with the Y axis.
            </summary>
            <param name="length">Length of the capsule.</param>
            <param name="radius">Radius of the capsule.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateCapsuleZ(System.Single,System.Single)">
            <summary>
            Creates the capsule whose central axis is aligned with the Z axis.
            </summary>
            <param name="length">Length of the capsule.</param>
            <param name="radius">Radius of the capsule.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConeX(System.Single,System.Single)">
            <summary>
            Creates the cone whose central axis is aligned with the X axis.
            </summary>
            <param name="length">Length of the cone.</param>
            <param name="radius">Radius of the cone.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConeY(System.Single,System.Single)">
            <summary>
            Creates the cone whose central axis is aligned with the Y axis.
            </summary>
            <param name="length">Length of the cone.</param>
            <param name="radius">Radius of the cone.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConeZ(System.Single,System.Single)">
            <summary>
            Creates the cone whose central axis is aligned with the Z axis.
            </summary>
            <param name="length">Length of the cone.</param>
            <param name="radius">Radius of the cone.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreatePlaneX(System.Single,System.Boolean)">
            <summary>
            Creates the plane perpendicular to the X axis.
            </summary>
            <param name="translation">Plane translation along the X axis.</param>
            <param name="inverseNormal">Flag of inverse the normal vector of plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreatePlaneY(System.Single,System.Boolean)">
            <summary>
            Creates the plane perpendicular to the Y axis.
            </summary>
            <param name="translation">Plane translation along the Y axis.</param>
            <param name="inverseNormal">Flag of inverse the normal vector of plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreatePlaneZ(System.Single,System.Boolean)">
            <summary>
            Creates the plane perpendicular to the Z axis.
            </summary>
            <param name="translation">Plane translation along the Z axis.</param>
            <param name="inverseNormal">Flag of inverse the normal vector of plane.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvex(Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean)">
            <summary>
            Creates the convex primitive shape from triangle mesh.
            </summary>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvex(Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Creates the convex primitive shape from triangle mesh.
            </summary>
            <param name="triangleMesh">TriangleMesh to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvex(Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Creates the convex primitive shape from array of the points.
            </summary>
            <param name="points">Array of the points to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvex(System.Collections.Generic.List{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates the convex primitive shape from list of the points.
            </summary>
            <param name="points">List of the points to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvexHull(Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean)">
            <summary>
            Creates the convex hull from triangle mesh.
            </summary>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvexHull(Komires.MataliPhysics.TriangleMesh)">
            <summary>
            Creates the convex hull from triangle mesh.
            </summary>
            <param name="triangleMesh">TriangleMesh to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvexHull(Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Creates the convex hull from array of the points.
            </summary>
            <param name="points">Array of the points to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateConvexHull(System.Collections.Generic.List{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates the convex hull from list of the points.
            </summary>
            <param name="points">List of the points to read.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.GetTriangleCount(Microsoft.Xna.Framework.Graphics.Model)">
            <summary>
            Returns the number of triangles in the model.
            </summary>
            <param name="model">Model object.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangleMesh(Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Matrix,System.Boolean,System.Boolean,System.Int32,System.Single[],System.Single[],System.Single,System.Single)">
            <summary>
            Creates the triangle mesh.
            Direction of triangles is used for calculating correct collisions for dynamic triangle meshes.
            Maximum number of triangles for the partition is used for increasing the collision performance.
            </summary>
            <param name="model">Model object.</param>
            <param name="transform">Transformation matrix. Usually identity.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="moveToCenter">Flag of moving the triangle mesh to his geometrical center.</param>
            <param name="maxTrianglesForPartition">Maximum number of triangles for the partition from the range 1 - 100000.</param>
            <param name="frictions">Frictions of triangle mesh. The GetTriangleCount method returns the number of triangles in the model. Default to null.</param>
            <param name="restitutions">Restitutions of triangle mesh. The GetTriangleCount method returns the number of triangles in the model. Default to null.</param>
            <param name="friction">Friction of triangle mesh for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of triangle mesh for the restitutions array equal null. Default to 0.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangleMesh(Komires.MataliPhysics.TriangleMesh,System.Boolean,System.Int32,System.Single[],System.Single[],System.Single,System.Single)">
            <summary>
            Creates the triangle mesh.
            Direction of triangles is used for calculating correct collisions for dynamic triangle meshes.
            Maximum number of triangles for the partition is used for increasing the collision performance.
            </summary>
            <param name="triangleMesh">TriangleMesh to read. If equal null then an empty static triangle mesh is created.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="maxTrianglesForPartition">Maximum number of triangles for the partition from the range 1 - 100000.</param>
            <param name="frictions">Frictions of triangle mesh. Default to null.</param>
            <param name="restitutions">Restitutions of triangle mesh. Default to null.</param>
            <param name="friction">Friction of triangle mesh for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of triangle mesh for the restitutions array equal null. Default to 0.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangleMesh(Komires.MataliPhysics.Triangle[],System.Boolean,System.Int32,System.Single[],System.Single[],System.Single,System.Single)">
            <summary>
            Creates the triangle mesh.
            Direction of triangles is used for calculating correct collisions for dynamic triangle meshes.
            Maximum number of triangles for the partition is used for increasing the collision performance.
            </summary>
            <param name="triangles">Triangle array. If equal null then an empty static triangle mesh is created.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="maxTrianglesForPartition">Maximum number of triangles for the partition from the range 1 - 100000.</param>
            <param name="frictions">Frictions of triangle mesh. Default to null.</param>
            <param name="restitutions">Restitutions of triangle mesh. Default to null.</param>
            <param name="friction">Friction of triangle mesh for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of triangle mesh for the restitutions array equal null. Default to 0.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangleMesh(Microsoft.Xna.Framework.Vector3[],System.Boolean,System.Int32,System.Single[],System.Single[],System.Single,System.Single)">
            <summary>
            Creates the triangle mesh.
            Direction of triangles is used for calculating correct collisions for dynamic triangle meshes.
            Maximum number of triangles for the partition is used for increasing the collision performance.
            </summary>
            <param name="triangles">Triangle array. If equal null then an empty static triangle mesh is created.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="maxTrianglesForPartition">Maximum number of triangles for the partition from the range 1 - 100000.</param>
            <param name="frictions">Frictions of triangle mesh. Default to null.</param>
            <param name="restitutions">Restitutions of triangle mesh. Default to null.</param>
            <param name="friction">Friction of triangle mesh for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of triangle mesh for the restitutions array equal null. Default to 0.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateTriangleMesh(Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[],System.Boolean,System.Int32,System.Single[],System.Single[],System.Single,System.Single)">
            <summary>
            Creates the triangle mesh.
            Direction of triangles is used for calculating correct collisions for dynamic triangle meshes.
            Maximum number of triangles for the partition is used for increasing the collision performance.
            </summary>
            <param name="triangles">Triangle array containing the VertexPositionNormalTexture elements. If equal null then an empty static triangle mesh is created.</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="maxTrianglesForPartition">Maximum number of triangles for the partition from the range 1 - 100000.</param>
            <param name="frictions">Frictions of triangle mesh. Default to null.</param>
            <param name="restitutions">Restitutions of triangle mesh. Default to null.</param>
            <param name="friction">Friction of triangle mesh for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of triangle mesh for the restitutions array equal null. Default to 0.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateHeightmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single[],System.Single[],System.Single[],System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the heightmap.
            </summary>
            <param name="positionX">Initial position of the created highmap on the X axis from the range 0 - totalCellCountX.</param>
            <param name="positionZ">Initial position of the created highmap on the Z axis from the range 0 - totalCellCountZ.</param>
            <param name="cellCountX">Number of cells of the created highmap on the X axis from the range 1 - totalCellCountX.</param>
            <param name="cellCountZ">Number of cells of the created highmap on the Z axis from the range 1 - totalCellCountZ.</param>
            <param name="totalCellCountX">Total number of cells on the X axis from the range 1 - 100000.</param>
            <param name="totalCellCountZ">Total number of cells on the Z axis from the range 1 - 100000.</param>
            <param name="heights">Heigths of heightmap from array.</param>
            <param name="frictions">Frictions of heightmap from array. Default to null.</param>
            <param name="restitutions">Restitutions of heightmap from array. Default to null.</param>
            <param name="friction">Friction of heightmap for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of heightmap for the restitutions array equal null. Default to 0.</param>
            <param name="dynamic">Flag of the dynamic heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateHeightmap(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates the heightmap.
            </summary>
            <param name="positionX">Initial position of the created highmap on the X axis from the range 0 - texture width.</param>
            <param name="positionZ">Initial position of the created highmap on the Z axis from the range 0 - texture height.</param>
            <param name="cellCountX">Number of cells of the created highmap on the X axis from the range 1 - texture width.</param>
            <param name="cellCountZ">Number of cells of the created highmap on the Z axis from the range 1 - texture height.</param>
            <param name="heights">Heigths of heightmap from texture.</param>
            <param name="frictions">Frictions of heightmap from texture. Default to null.</param>
            <param name="restitutions">Restitutions of heightmap from texture. Default to null.</param>
            <param name="friction">Friction of heightmap for the frictions array equal null. Default to 1.</param>
            <param name="restitution">Restitution of heightmap for the restitutions array equal null. Default to 0.</param>
            <param name="normalizeHeights">Normalization of the heights values of heightmap.</param>
            <param name="dynamic">Flag of the dynamic heightmap surface.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapePrimitive.CreateFluid(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the fluid surface.
            </summary>
            <param name="cellCountX">Number of cells on the X axis from the range 1 - 100000.</param>
            <param name="cellCountZ">Number of cells on the Z axis from the range 1 - 100000.</param>
            <param name="depth">Depth of fluid.</param>
            <param name="density">Density of fluid.</param>
            <param name="linearDamping">Linear damping of fluid.</param>
            <param name="angularDamping">Angular damping of fluid.</param>
            <param name="surfaceDamping">Damping of fluid surface.</param>
            <param name="surfaceVelocityFactor">Velocity factor of move of dynamic fluid surface from the range 0 - 20.</param>
            <param name="surfaceAmplitudeFactor">Factor of amplitude correction of dynamic fluid surface from the range 0 - 5.</param>
            <param name="minSurfaceAmplitude">Minimum amplitude of dynamic fluid surface from the range 0 - 5.</param>
            <param name="maxSurfaceAmplitude">Maximum amplitude of dynamic fluid surface from the range 0 - 10.</param>
            <param name="dynamic">Flag of the dynamic fluid surface.</param>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.IsEnveloped">
            <summary>
            Returns whether the ShapePrimitive object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.Name">
            <summary>
            Gets or sets name of the primitive shape.
            Name must be unique in the ShapePrimitiveManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.Index">
            <summary>
            Gets the index of primitive shape in the ShapePrimitiveManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.ConvexPointCount">
            <summary>
            Gets the number of points owned by convex primitive shape.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.TriangleMesh">
            <summary>
            Gets the triangle mesh of the convex shape.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.ShapePrimitiveType">
            <summary>
            Gets type of the primitive shape. Default to None.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.BoxHalfWidth">
            <summary>
            Gets the half of the width of the cuboid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.BoxHalfHeight">
            <summary>
            Gets the half of the height of the cuboid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.BoxHalfLength">
            <summary>
            Gets the half of the length of the cuboid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.CylinderLength">
            <summary>
            Gets the length of the cylinder.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.CylinderRadius">
            <summary>
            Gets the radius of the cylinder.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.CylinderRadius1">
            <summary>
            Gets the first radius of the cylinder with two radii.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.CylinderRadius2">
            <summary>
            Gets the second radius of the cylinder with two radii.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.SphereRadius">
            <summary>
            Gets the radius of the sphere.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.CapsuleLength">
            <summary>
            Gets the length of the capsule.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.CapsuleRadius">
            <summary>
            Gets the radius of the capsule.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.ConeLength">
            <summary>
            Gets the length of the cone.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.ConeRadius">
            <summary>
            Gets the radius of the cone.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.PlaneTranslation">
            <summary>
            Gets plane translation along the axis.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.PlaneInverseNormal">
            <summary>
            Gets flag of inverse the normal vector of plane.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.TriangleMeshMaxTrianglesForPartition">
            <summary>
            Gets maximum number of triangles for the partition.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.HeightmapSizeX">
            <summary>
            Gets the size of heightmap on the X axis.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.HeightmapSizeZ">
            <summary>
            Gets the size of heightmap on the Z axis.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.HeightmapHeights">
            <summary>
            Gets the array containing the heights of the heightmap.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.HeightmapFrictions">
            <summary>
            Gets the array containing the frictions of the heightmap.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.HeightmapRestitutions">
            <summary>
            Gets the array containing the restitutions of the heightmap.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidCellCountX">
            <summary>
            Gets the number of cells on the X axis for fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidCellCountZ">
            <summary>
            Gets the number of cells on the Z axis for fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidDepth">
            <summary>
            Gets the depth of fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidDensity">
            <summary>
            Gets the density of fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidLinearDamping">
            <summary>
            Gets the linear damping of fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidAngularDamping">
            <summary>
            Gets the angular damping of fluid.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidSurfaceDamping">
            <summary>
            Gets the damping of fluid surface.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidSurfaceVelocityFactor">
            <summary>
            Gets the velocity factor of move of dynamic fluid surface.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidSurfaceAmplitudeFactor">
            <summary>
            Gets the factor of amplitude correction of dynamic fluid surface.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidMinSurfaceAmplitude">
            <summary>
            Gets the minimum amplitude of dynamic fluid surface.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.FluidMaxSurfaceAmplitude">
            <summary>
            Gets the maximum amplitude of dynamic fluid surface.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.Dynamic">
            <summary>
            Returns True when the surface of primitive shape is dynamic.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.DynamicUpdate">
            <summary>
            Gets or Sets the flag of dynamic update of the shape primitive. Returns True when the surface of primitive shape was updated. Returns False after using GetMesh and GetMeshVertices methods for the shape.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapePrimitive.DynamicUpdateState">
            <summary>
            Gets the state of flag of dynamic update of the shape primitive.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.PhysicsEngine">
            <summary>
            The PhysicsEngine object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsEngine.#ctor(System.String)">
            <summary>
            Creates the engine with the specified name. 
            </summary>
            <param name="name">Name of the engine.</param>
        </member>
        <member name="M:Komires.MataliPhysics.PhysicsEngine.Exit">
            <summary>
            Removes all scenes from the PhysicsSceneManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngine.Factory">
            <summary>
            Gets the PhysicsEngineFactory object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngine.IsEnveloped">
            <summary>
            Returns whether the PhysicsEngine object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngine.Name">
            <summary>
            Gets or sets name of the engine.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.PhysicsEngine.Version">
            <summary>
            Gets version of the engine.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.InternalControllers">
            <summary>
            The InternalControllers object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.InternalControllers.CreateCursorController(System.Boolean)">
            <summary>
            Creates the CursorController object. 
            </summary>
            <param name="enabled">Enables or disables the controller.</param>
        </member>
        <member name="M:Komires.MataliPhysics.InternalControllers.CreateScreenToRayController(System.Boolean)">
            <summary>
            Creates the ScreenToRayController object. 
            </summary>
            <param name="enabled">Enables or disables the controller.</param>
        </member>
        <member name="M:Komires.MataliPhysics.InternalControllers.CreateHeightmapController(System.Boolean)">
            <summary>
            Creates the HeightmapController object. 
            </summary>
            <param name="enabled">Enables or disables the controller.</param>
        </member>
        <member name="M:Komires.MataliPhysics.InternalControllers.CreateFluidController(System.Boolean)">
            <summary>
            Creates the FluidController object. 
            </summary>
            <param name="enabled">Enables or disables the controller.</param>
        </member>
        <member name="M:Komires.MataliPhysics.InternalControllers.CreateTriangleMeshController(System.Boolean)">
            <summary>
            Creates the TriangleMeshController object. 
            </summary>
            <param name="enabled">Enables or disables the controller.</param>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.DestructionController">
            <summary>
            Gets the DestructionController object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.CursorController">
            <summary>
            Gets the CursorController object created by the CreateCursorController method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.ScreenToRayController">
            <summary>
            Gets the ScreenToRayController object created by the CreateScreenToRayController method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.HeightmapController">
            <summary>
            Gets the HightmapController object created by the CreateHightmapController method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.FluidController">
            <summary>
            Gets the FluidController object created by the CreateFluidController method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.TriangleMeshController">
            <summary>
            Gets the TriangleMeshController object created by the CreateTriangleMeshController method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.InternalControllers.IsEnveloped">
            <summary>
            Returns whether the InternalControllers object is enveloped. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ShapeManager">
            <summary>
            The ShapeManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Get(System.Int32)">
            <summary>
            Gets the shape with the specified index. 
            </summary>
            <param name="index">Index of the shape in the ShapeManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Create(System.String)">
            <summary>
            Creates the shape with the specified name. 
            Name must be unique in the ShapeManager.
            </summary>
            <param name="name">Name of the shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Contains(System.String)">
            <summary>
            Determines whether the shape is in the ShapeManager. 
            </summary>
            <param name="name">Name of the shape to locate in the ShapeManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Contains(Komires.MataliPhysics.Shape)">
            <summary>
            Determines whether the shape is in the ShapeManager. 
            </summary>
            <param name="shape">Shape to locate in the ShapeManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Find(System.String)">
            <summary>
            Searches for the shape in the ShapeManager. 
            </summary>
            <param name="name">Name of the shape to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Find(System.Int32)">
            <summary>
            Searches for the shape in the ShapeManager. 
            </summary>
            <param name="index">Index of the shape to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Remove(System.String)">
            <summary>
            Removes the shape from the ShapeManager. 
            </summary>
            <param name="name">Name of the shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Remove(System.Int32)">
            <summary>
            Removes the shape from the ShapeManager. 
            </summary>
            <param name="index">Index of the shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.Remove(Komires.MataliPhysics.Shape)">
            <summary>
            Removes the shape from the ShapeManager. 
            </summary>
            <param name="shape">Shape to remove from the ShapeManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.ShapeManager.RemoveAll">
            <summary>
            Removes all shapes from the ShapeManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapeManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapeManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapeManager.IsEnveloped">
            <summary>
            Returns whether the ShapeManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.ShapeManager.Count">
            <summary>
            Gets the number of shapes managed by the ShapeManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Edge">
            <summary>
            The Edge structure. 
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.Edge.Start">
            <summary>
            Start position.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.Edge.End">
            <summary>
            End position.
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Edge.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Constructor of the Edge.
            </summary>
            <param name="start">Position.</param>
            <param name="end">Color.</param>
        </member>
        <member name="T:Komires.MataliPhysics.CollisionMethodArgs">
            <summary>
            The arguments of the collision methods. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CollisionMethodArgs.OwnerIndex">
            <summary>
            Gets or Sets index of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CollisionMethodArgs.OwnerSceneIndex">
            <summary>
            Gets or Sets index of the scene of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CollisionMethodArgs.Time">
            <summary>
            Gets or Sets the time value. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CollisionMethodArgs.Collisions">
            <summary>
            Gets indices of the colliding physics objects. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.CollisionMethodArgs.UserTag">
            <summary>
            Gets or Sets the user object. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.SimulateMethodArgs">
            <summary>
            The arguments of the simulation methods. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.SimulateMethodArgs.OwnerIndex">
            <summary>
            Gets or Sets index of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.SimulateMethodArgs.OwnerSceneIndex">
            <summary>
            Gets or Sets index of the scene of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.SimulateMethodArgs.Time">
            <summary>
            Gets or Sets the time value. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.SimulateMethodArgs.UserTag">
            <summary>
            Gets or Sets the user object. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.DrawMethodArgs">
            <summary>
            The arguments of the draw methods. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DrawMethodArgs.OwnerIndex">
            <summary>
            Gets or Sets index of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DrawMethodArgs.OwnerSceneIndex">
            <summary>
            Gets or Sets index of the scene of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DrawMethodArgs.Time">
            <summary>
            Gets or Sets the time value. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.DrawMethodArgs.UserTag">
            <summary>
            Gets or Sets the user object. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.UserMethodArgs">
            <summary>
            The arguments of the user methods. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserMethodArgs.OwnerIndex">
            <summary>
            Gets or Sets index of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserMethodArgs.OwnerSceneIndex">
            <summary>
            Gets or Sets index of the scene of the owner of the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserMethodArgs.SenderIndex">
            <summary>
            Gets or Sets index of the object invoking the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserMethodArgs.SenderSceneIndex">
            <summary>
            Gets or Sets index of the scene of the object invoking the method. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserMethodArgs.Time">
            <summary>
            Gets or Sets the time value. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.UserMethodArgs.UserTag">
            <summary>
            Gets or Sets the user object. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.CollisionMethod">
            <summary>
            The collision method. 
            </summary>
            <param name="Args">The arguments of the method.</param>
        </member>
        <member name="T:Komires.MataliPhysics.SimulateMethod">
            <summary>
            The simulation method. 
            </summary>
            <param name="Args">The arguments of the method.</param>
        </member>
        <member name="T:Komires.MataliPhysics.DrawMethod">
            <summary>
            The draw method. 
            </summary>
            <param name="Args">The arguments of the method.</param>
        </member>
        <member name="T:Komires.MataliPhysics.UserMethod">
            <summary>
            The user method. 
            </summary>
            <param name="Args">The arguments of the method.</param>
        </member>
        <member name="T:Komires.MataliPhysics.Vertex">
            <summary>
            The Vertex object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.GetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the vertex position. 
            </summary>
            <param name="position">The vertex position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.SetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the vertex position. 
            </summary>
            <param name="position">The vertex position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.SetPosition(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the vertex position. 
            </summary>
            <param name="position">The vertex position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Sets the vertex position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.GetNormal(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the normal vector of vertex. 
            </summary>
            <param name="normal">The normal vector of vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.GetTexture(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets the texture's coordinates of vertex. 
            </summary>
            <param name="texture">The texture's coordinates of vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.SetTexture(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Sets the texture's coordinates of vertex. 
            </summary>
            <param name="texture">The texture's coordinates of vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.SetTexture(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the texture's coordinates of vertex. 
            </summary>
            <param name="texture">The texture's coordinates of vertex.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Vertex.SetTexture(System.Single,System.Single)">
            <summary>
            Sets the texture's coordinates of vertex. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Vertex.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Vertex.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Vertex.TriangleMeshRegion">
            <summary>
            Gets the TriangleMeshRegion object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Vertex.IsEnveloped">
            <summary>
            Returns whether the Vertex object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Vertex.Name">
            <summary>
            Gets or sets name of the vertex.
            Name must be unique in the VertexManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Vertex.Index">
            <summary>
            Gets the index of vertex in the VertexManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.TriangleManager">
            <summary>
            The TriangleManager object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Get(System.Int32)">
            <summary>
            Gets the triangle with the specified index. 
            </summary>
            <param name="index">Index of the triangle in the TriangleManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Create(System.String)">
            <summary>
            Creates the triangle with the specified name. 
            Name must be unique in the TriangleManager.
            </summary>
            <param name="name">Name of the triangle.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Contains(System.String)">
            <summary>
            Determines whether the triangle is in the TriangleManager. 
            </summary>
            <param name="name">Name of the triangle to locate in the TriangleManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Contains(Komires.MataliPhysics.Triangle)">
            <summary>
            Determines whether the triangle is in the TriangleManager. 
            </summary>
            <param name="triangle">Triangle to locate in the TriangleManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Find(System.String)">
            <summary>
            Searches for the triangle in the TriangleManager. 
            </summary>
            <param name="name">Name of the triangle to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Find(System.Int32)">
            <summary>
            Searches for the triangle in the TriangleManager. 
            </summary>
            <param name="index">Index of the triangle to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Remove(System.String)">
            <summary>
            Removes the triangle from the TriangleManager. 
            </summary>
            <param name="name">Name of the triangle to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Remove(System.Int32)">
            <summary>
            Removes the triangle from the TriangleManager. 
            </summary>
            <param name="index">Index of the triangle to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.Remove(Komires.MataliPhysics.Triangle)">
            <summary>
            Removes the triangle from the TriangleManager. 
            </summary>
            <param name="triangle">Triangle to remove from the TriangleManager.</param>
        </member>
        <member name="M:Komires.MataliPhysics.TriangleManager.RemoveAll">
            <summary>
            Removes all triangles from the TriangleManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleManager.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleManager.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleManager.TriangleMeshRegion">
            <summary>
            Gets the TriangleMeshRegion object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleManager.IsEnveloped">
            <summary>
            Returns whether the TriangleManager object is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.TriangleManager.Count">
            <summary>
            Gets the number of triangles managed by the TriangleManager. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Transform">
            <summary>
            The Transform object. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetLinearVelocityMagnitude">
            <summary>
            Gets the magnitude of linear velocity. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetLinearVelocityMagnitudeSquared">
            <summary>
            Gets the squared magnitude of linear velocity. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetAngularVelocityMagnitude">
            <summary>
            Gets the magnitude of angular velocity. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetAngularVelocityMagnitudeSquared">
            <summary>
            Gets the squared magnitude of angular velocity. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetLinearVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the linear velocity. 
            </summary>
            <param name="linearVelocity">The linear velocity.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLinearVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the linear velocity. 
            </summary>
            <param name="linearVelocity">The linear velocity.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLinearVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the linear velocity. 
            </summary>
            <param name="linearVelocity">The linear velocity.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLinearVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the linear velocity. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetAngularVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the angular velocity. 
            </summary>
            <param name="angularVelocity">The angular velocity.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetAngularVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the angular velocity. 
            </summary>
            <param name="angularVelocity">The angular velocity.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetAngularVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the angular velocity. 
            </summary>
            <param name="angularVelocity">The angular velocity.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetAngularVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the angular velocity. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the position. 
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetPosition(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the position. 
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetPosition(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the position. 
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Sets the position. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetScale(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Gets the scale. 
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetScale(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the scale. 
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetScale(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the scale. 
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            Sets the scale. 
            </summary>
            <param name="x">Scale x.</param>
            <param name="y">Scale y.</param>
            <param name="z">Scale z.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetScale(System.Single)">
            <summary>
            Sets the scale. 
            </summary>
            <param name="scale">Scale value.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetOrientation(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Gets the orientation. 
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetOrientation(Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Sets the orientation. 
            The correct rotation will be also calculated.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetOrientation(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Sets the orientation. 
            The correct rotation will be also calculated.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetOrientation(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the orientation. 
            The correct rotation will be also calculated.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <param name="w">The w coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the rotation. 
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetTransposeRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the transpose rotation. 
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the rotation. 
            The correct orientation will be also calculated.
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetRotation(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the rotation. 
            The correct orientation will be also calculated.
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetTransposeRotation(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the transpose rotation. 
            The correct orientation will be also calculated.
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetTransposeRotation(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the transpose rotation. 
            The correct orientation will be also calculated.
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.GetTransformMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the transform matrix. 
            </summary>
            <param name="transform">The transform matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetTransformMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the transform matrix. 
            Correct value of the position, scale, orientation and the rotation will be also calculated.
            </summary>
            <param name="transform">The transform matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetTransformMatrix(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the transform matrix. 
            Correct value of the position, scale, orientation and the rotation will be also calculated.
            </summary>
            <param name="transform">The transform matrix.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLocalLinearVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the linear velocity defined in local space. 
            </summary>
            <param name="linearVelocity">Linear velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLocalLinearVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the linear velocity defined in local space. 
            </summary>
            <param name="linearVelocity">Linear velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLocalLinearVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the linear velocity defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLocalAngularVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the angular velocity defined in local space. 
            </summary>
            <param name="angularVelocity">Angular velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLocalAngularVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the angular velocity defined in local space. 
            </summary>
            <param name="angularVelocity">Angular velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetLocalAngularVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the angular velocity defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetWorldLinearVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the linear velocity defined in world space. 
            </summary>
            <param name="linearVelocity">Linear velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetWorldLinearVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the linear velocity defined in world space. 
            </summary>
            <param name="linearVelocity">Linear velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetWorldLinearVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the linear velocity defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetWorldAngularVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Sets the angular velocity defined in world space. 
            </summary>
            <param name="angularVelocity">Angular velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetWorldAngularVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Sets the angular velocity defined in world space. 
            </summary>
            <param name="angularVelocity">Angular velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.SetWorldAngularVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the angular velocity defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddLocalLinearVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds the linear velocity defined in local space. 
            </summary>
            <param name="linearVelocity">Linear velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddLocalLinearVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds the linear velocity defined in local space. 
            </summary>
            <param name="linearVelocity">Linear velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddLocalLinearVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Adds the linear velocity defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddLocalAngularVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds the angular velocity defined in local space. 
            </summary>
            <param name="angularVelocity">Angular velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddLocalAngularVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds the angular velocity defined in local space. 
            </summary>
            <param name="angularVelocity">Angular velocity in local space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddLocalAngularVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Adds the angular velocity defined in local space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddWorldLinearVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds the linear velocity defined in world space. 
            </summary>
            <param name="linearVelocity">Linear velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddWorldLinearVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds the linear velocity defined in world space. 
            </summary>
            <param name="linearVelocity">Linear velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddWorldLinearVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Adds the linear velocity defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddWorldAngularVelocity(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Adds the angular velocity defined in world space. 
            </summary>
            <param name="angularVelocity">Angular velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddWorldAngularVelocity(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds the angular velocity defined in world space. 
            </summary>
            <param name="angularVelocity">Angular velocity in world space.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Transform.AddWorldAngularVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Adds the angular velocity defined in world space. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Transform.IsEnveloped">
            <summary>
            Returns whether the Transform object is enveloped. 
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.ShapeCompoundType">
            <summary>
            Types of compounding shapes.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapeCompoundType.ConvexHull">
            <summary>
            Convex hull.
            </summary>
        </member>
        <member name="F:Komires.MataliPhysics.ShapeCompoundType.MinkowskiSum">
            <summary>
            Minkowski sum.
            </summary>
        </member>
        <member name="T:Komires.MataliPhysics.Shape">
            <summary>
            The shape. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetShapePrimitiveTransformMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the transformation matrix of the primitive shape. 
            </summary>
            <param name="shapePrimitiveTransformMatrix">The transformation matrix of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShapePrimitiveTransformMatrix(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the transformation matrix of the primitive shape. 
            </summary>
            <param name="shapePrimitiveTransformMatrix">The transformation matrix of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShapePrimitiveTransformMatrix(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the transformation matrix of the primitive shape. 
            </summary>
            <param name="shapePrimitiveTransformMatrix">The transformation matrix of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.Set(Komires.MataliPhysics.ShapePrimitive,Microsoft.Xna.Framework.Matrix@,System.Single)">
            <summary>
            Sets the primitive shape with the specified transformation matrix and collision margin.
            </summary>
            <param name="shapePrimitive">The primitive shape to set.</param>
            <param name="shapePrimitiveTransformMatrix">The transformation matrix of the primitive shape.</param>
            <param name="shapePrimitiveMargin">Collision margin of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.Set(Komires.MataliPhysics.ShapePrimitive,Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Sets the primitive shape with the specified transformation matrix and collision margin.
            </summary>
            <param name="shapePrimitive">The primitive shape to set.</param>
            <param name="shapePrimitiveTransformMatrix">The transformation matrix of the primitive shape.</param>
            <param name="shapePrimitiveMargin">Collision margin of the primitive shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.Add(Komires.MataliPhysics.Shape,Microsoft.Xna.Framework.Matrix@,System.Single,Komires.MataliPhysics.ShapeCompoundType)">
            <summary>
            Adds shape with the specified transformation matrix, collision margin and compounding type.
            </summary>
            <param name="shape">The shape to set.</param>
            <param name="shapeTransformMatrix">The transformation matrix of the shape.</param>
            <param name="shapeMargin">Collision margin of the shape.</param>
            <param name="shapeCompoundType">The type of compounding shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.Add(Komires.MataliPhysics.Shape,Microsoft.Xna.Framework.Matrix,System.Single,Komires.MataliPhysics.ShapeCompoundType)">
            <summary>
            Adds shape with the specified transformation matrix, collision margin and compounding type.
            </summary>
            <param name="shape">The shape to set.</param>
            <param name="shapeTransformMatrix">The transformation matrix of the shape.</param>
            <param name="shapeMargin">Collision margin of the shape.</param>
            <param name="shapeCompoundType">The transformation type of shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetShape(System.Int32)">
            <summary>
            Gets the shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShape(System.Int32,Komires.MataliPhysics.Shape)">
            <summary>
            Sets the shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
            <param name="shape">The shape to set.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetShapeTransformMatrix(System.Int32,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Gets the transformation matrix of shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
            <param name="shapeTransformMatrix">The transformation matrix of the shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShapeTransformMatrix(System.Int32,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Sets the transformation matrix of shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
            <param name="shapeTransformMatrix">The transformation matrix of the shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShapeTransformMatrix(System.Int32,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Sets the transformation matrix of shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
            <param name="shapeTransformMatrix">The transformation matrix of the shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetShapeMargin(System.Int32)">
            <summary>
            Gets the collision margin of shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShapeMargin(System.Int32,System.Single)">
            <summary>
            Sets the collision margin of shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
            <param name="shapeMargin">Collision margin of the shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetShapeCompoundType(System.Int32)">
            <summary>
            Gets the type of compounding shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.SetShapeCompoundType(System.Int32,Komires.MataliPhysics.ShapeCompoundType)">
            <summary>
            Sets the type of compounding shape at the specified position. 
            </summary>
            <param name="position">Position from the range 0 - ShapeCount.</param>
            <param name="shapeCompoundType">The type of compounding shape.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.FindShape(System.String)">
            <summary>
            Searches for the shape with the specified name. 
            </summary>
            <param name="name">Name of the shape to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.FindShape(System.Int32)">
            <summary>
            Searches for the shape with the specified index.
            </summary>
            <param name="index">Index of the shape to search for.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.FindShape(Komires.MataliPhysics.Shape)">
            <summary>
            Determines whether the specified shape is owned by the current shape. 
            </summary>
            <param name="shape">The shape to locate in owned shapes.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.RemoveShape(System.String)">
            <summary>
            Removes the shape with the specified name from the owned shapes. 
            </summary>
            <param name="name">Name of the shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.RemoveShape(System.Int32)">
            <summary>
            Removes the shape with the specified index from the owned shapes. 
            </summary>
            <param name="index">Index of the shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.RemoveShape(Komires.MataliPhysics.Shape)">
            <summary>
            Removes the shape from the owned shapes. 
            </summary>
            <param name="shape">The shape to remove.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.RemoveAllShapes">
            <summary>
            Removes all owned shapes. 
            </summary>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.CreateMesh(System.Single)">
            <summary>
            Creates the triangle mesh for the shape with the default accuracy for rows and columns.
            For the shape being a triangle mesh a bounding box is created.
            This method must be invoked before GetMesh, GetMeshVertices, GetMeshIndices methods. 
            The default accuracy for rows is equal 10 for colums 20.
            Creation accuracy for the fluid surface and heightmap is taken directly from the primitive shape. 
            </summary>
            <param name="margin">Creation margin of triangle mesh.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.CreateMesh(System.Int32,System.Int32,System.Single)">
            <summary>
            Creates the triangle mesh for the shape.
            For the shape being a triangle mesh a bounding box is created.
            This method must be invoked before GetMesh, GetMeshVertices, GetMeshIndices methods. 
            Creation accuracy for the fluid surface and heightmap is taken directly from the primitive shape. 
            </summary>
            <param name="rows">Creation accuracy of triangle mesh for rows from the range 3 - 40.</param>
            <param name="columns">Creation accuracy of triangle mesh for columns from the range 3 - 40.</param>
            <param name="margin">Creation margin of triangle mesh.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetMesh(System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[])">
            <summary>
            Returns the array with data of triangles. 
            The array must be defined and length of the array must be greater or equal TriangleVertexCount.
            Before the first use of this method the CreateMesh method must be invoked. 
            </summary>
            <param name="textureScaleX">Factor of the multiplication of x coordinate of the texture. Usually x = 1</param>
            <param name="textureScaleY">Factor of the multiplication of y coordinate of the texture. Usually y = 1</param>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="flipNormals">Flag of reversing the direction of normal vectors of triangles.</param>
            <param name="smoothNormals">Flag of smoothing the normal vectors.</param>
            <param name="meshVertices">The array of VertexPositionNormalTexture elements.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetMeshVertices(System.Single,System.Single,System.Boolean,System.Boolean,Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture[])">
            <summary>
            Returns the array with triangle vertices.
            The array must be defined and length of the array must be greater or equal VertexCount.
            Before the first use of this method the CreateMesh method must be invoked. 
            </summary>
            <param name="textureScaleX">Factor of the multiplication of x coordinate of the texture. Usually x = 1</param>
            <param name="textureScaleY">Factor of the multiplication of y coordinate of the texture. Usually y = 1</param>
            <param name="flipNormals">Flag of reversing the direction of normal vectors of triangles.</param>
            <param name="smoothNormals">Flag of smoothing the normal vectors.</param>
            <param name="meshVertices">The array of VertexPositionNormalTexture elements.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetMeshIndices(System.Boolean,System.UInt16[])">
            <summary>
            Returns the array with triangle indices.
            The array must be defined and length of the array must be greater or equal IndexCount.
            Before the first use of this method the CreateMesh method must be invoked. 
            </summary>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="meshIndices">The array of 16-bit indices to fill up.</param>
        </member>
        <member name="M:Komires.MataliPhysics.Shape.GetMeshIndices(System.Boolean,System.Int32[])">
            <summary>
            Returns the array with triangle indices.
            The array must be defined and length of the array must be greater or equal IndexCount.
            Before the first use of this method the CreateMesh method must be invoked. 
            </summary>
            <param name="flipTriangles">Flag of reversing the direction of triangles.</param>
            <param name="meshIndices">The array of 16-bit indices to fill up.</param>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.Engine">
            <summary>
            Gets the PhysicsEngine object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.Scene">
            <summary>
            Gets the PhysicsScene object. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.IsEnveloped">
            <summary>
            Returns whether the shape is enveloped. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.Name">
            <summary>
            Gets or sets name of the shape.
            Name must be unique in the ShapeManager.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.Index">
            <summary>
            Gets the index of shape in the ShapeManager. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.ShapePrimitive">
            <summary>
            Gets or sets the primitive shape. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.ShapePrimitiveMargin">
            <summary>
            Gets or sets the collision margin. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.ShapeCount">
            <summary>
            Gets the number of objects Shape owned by shape. 
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.TriangleCount">
            <summary>
            Gets the number of triangles. This number is updated by the CreateMesh method.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.TriangleVertexCount">
            <summary>
            Gets the number of triangle vertices. This number is updated by the CreateMesh method.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.VertexCount">
            <summary>
            Gets the number of vertices. This number is updated by the CreateMesh method.
            </summary>
        </member>
        <member name="P:Komires.MataliPhysics.Shape.IndexCount">
            <summary>
            Gets the number of triangle indices. This number is updated by the CreateMesh method.
            </summary>
        </member>
    </members>
</doc>
